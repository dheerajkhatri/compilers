Terminals unused in grammar

   PREC2
   TEMPPREC
   INCR_OP
   DECR_OP
   MAIN
   WHITESPACE
   CONSTANT
   STRING


Grammar

    0 $accept: START $end

    1 START: OUTER

    2 OUTER: %empty
    3      | VARDEF OUTER
    4      | STRUCT1 OUTER
    5      | FUNCTION OUTER
    6      | error

    7 TYPE: INT
    8     | BOOL
    9     | VOID
   10     | FLOAT
   11     | DOUBLE
   12     | STRUCT IDENTIFIER
   13     | CHAR

   14 STRUCT1: STRUCT IDENTIFIER '{' MVARDEF VARDEF ';' '}' ';'

   15 MVARDEF: MVARDEF VARDEF ';'
   16        | %empty

   17 FUNCTION: TYPE VARNAME '(' FARG ')' '{' INNER '}'

   18 INNER: LOOP INNER
   19      | CONDITIONAL INNER
   20      | VARDEF INNER
   21      | RETURN UNARY_EXP ';'
   22      | INPUT INNER
   23      | OUTPUT INNER
   24      | MATH INNER
   25      | %empty
   26      | error INNER

   27 VARNAME: '*' VARNAME
   28        | '&' VARNAME
   29        | IDENTIFIER BRACKET

   30 BRACKET: BRACKET '[' RMATH ']'
   31        | %empty

   32 MARG: MARG TYPE VARNAME ','
   33     | %empty

   34 FARG: MARG TYPE VARNAME
   35     | %empty

   36 VARDEF: TYPE VARNAME ';'
   37       | TYPE VARNAME '=' RMATH ';'
   38       | TYPE MVAR VARNAME ';'
   39       | TYPE MVAR VARNAME '=' RMATH ';'

   40 MVAR: MVAR VARNAME ','
   41     | MVAR VARNAME '=' RMATH ','
   42     | VARNAME ','
   43     | VARNAME '=' RMATH ','

   44 MATH: VARNAME '=' RMATH ';'
   45     | ';'
   46     | VARNAME OPERATOR '=' RMATH ';'
   47     | UNARY_EXP ';'

   48 RMATH: '(' RMATH ')'
   49      | '!' RMATH
   50      | RADDSUB

   51 RADDSUB: RMULTIDIV
   52        | RADDSUB '-' RADDSUB
   53        | RADDSUB '+' RADDSUB

   54 RMULTIDIV: RMULTIDIV '*' RMULTIDIV
   55          | RMULTIDIV '/' RMULTIDIV
   56          | RMULTIDIV '%' RMULTIDIV
   57          | UNARY_EXP

   58 UNARY_EXP: VARNAME INC_OP
   59          | INC_OP VARNAME
   60          | VARNAME DEC_OP
   61          | DEC_OP VARNAME
   62          | CONST
   63          | FCALL
   64          | VARNAME

   65 CONDITIONAL: IFN
   66            | SWITCHN

   67 IFN: IF '(' COND ')' '{' INNER '}'
   68    | IF '(' error ')' '{' INNER '}'
   69    | IF '(' COND ')' '{' INNER '}' ELSEC
   70    | IF '(' error ')' '{' INNER '}' ELSEC

   71 COND: COND AND_OP COND
   72     | COND OR_OP COND
   73     | RMATH
   74     | COND '>' COND
   75     | COND '<' COND
   76     | COND DOUBLE_EQ_OP COND
   77     | COND NOT_EQ_OP COND
   78     | COND LESS_EQ_OP COND
   79     | COND GRE_EQ_OP COND

   80 ELSEC: ELIF '(' COND ')' '{' INNER '}' ELSEC
   81      | ELSE '{' INNER '}'
   82      | ELIF '(' COND ')' '{' INNER '}'
   83      | ELIF '(' error ')' '{' INNER '}'
   84      | ELIF '(' error ')' '{' INNER '}' ELSEC

   85 SWITCHN: SWITCH '(' COND ')' '{' SWITCHINNER '}'
   86        | SWITCH '(' error ')' '{' SWITCHINNER '}'

   87 SWITCHINNER: CASE CONST ':' '{' INNER '}' SWITCHINNER
   88            | CASE CONST ':' INNER SWITCHINNER
   89            | DEFAULT ':' '{' INNER '}' WODEFAULT
   90            | DEFAULT ':' INNER WODEFAULT
   91            | %empty

   92 WODEFAULT: CASE CONST ':' '{' INNER '}' WODEFAULT
   93          | CASE CONST ':' INNER WODEFAULT
   94          | %empty

   95 ARGT: MARGT RMATH

   96 MARGT: MARGT RMATH ','
   97      | %empty

   98 FCALL: VARNAME '(' ARGT ')'

   99 LOOP: FORN
  100     | WHILEN
  101     | DOWHILEN

  102 FL1: MATH

  103 FL2: COND
  104    | %empty

  105 FL3: VARNAME '=' RMATH
  106    | TYPE VARNAME '=' RMATH
  107    | VARNAME OPERATOR '=' RMATH
  108    | UNARY_EXP
  109    | %empty

  110 OPERATOR: '+'
  111         | '-'
  112         | '*'
  113         | '/'
  114         | '&'
  115         | '^'
  116         | '|'
  117         | '%'

  118 FORN: FOR '(' FL1 FL2 ';' FL3 ')' '{' INNER '}'
  119     | FOR '(' error ')' '{' INNER '}'

  120 WHILEN: WHILE '(' COND ')' '{' INNER '}'
  121       | WHILE '(' error ')' '{' INNER '}'

  122 DOWHILEN: DO '{' INNER '}' WHILE '(' COND ')' ';'
  123         | DO '{' INNER '}' WHILE '(' error ')' ';'

  124 MIN: MIN INP_OP VARNAME
  125    | %empty

  126 MOUT: MOUT OUT_OP VARNAME
  127     | MOUT OUT_OP CONST
  128     | %empty

  129 INPUT: IN MIN INP_OP VARNAME ';'

  130 OUTPUT: OUT MOUT OUT_OP VARNAME ';'
  131       | OUT MOUT OUT_OP CONST ';'

  132 CONST: TRUE
  133      | FALSE
  134      | INTCONST
  135      | DOUBLE_CONSTANT
  136      | CHAR_CONSTANT


Terminals, with rules where they appear

$end (0) 0
'!' (33) 49
'%' (37) 56 117
'&' (38) 28 114
'(' (40) 17 48 67 68 69 70 80 82 83 84 85 86 98 118 119 120 121 122
    123
')' (41) 17 48 67 68 69 70 80 82 83 84 85 86 98 118 119 120 121 122
    123
'*' (42) 27 54 112
'+' (43) 53 110
',' (44) 32 40 41 42 43 96
'-' (45) 52 111
'/' (47) 55 113
':' (58) 87 88 89 90 92 93
';' (59) 14 15 21 36 37 38 39 44 45 46 47 118 122 123 129 130 131
'<' (60) 75
'=' (61) 37 39 41 43 44 46 105 106 107
'>' (62) 74
'[' (91) 30
']' (93) 30
'^' (94) 115
'{' (123) 14 17 67 68 69 70 80 81 82 83 84 85 86 87 89 92 118 119 120
    121 122 123
'|' (124) 116
'}' (125) 14 17 67 68 69 70 80 81 82 83 84 85 86 87 89 92 118 119 120
    121 122 123
error (256) 6 26 68 70 83 84 86 119 121 123
PREC2 (258)
TEMPPREC (259)
OR_OP (260) 72
AND_OP (261) 71
DOUBLE_EQ_OP (262) 76
NOT_EQ_OP (263) 77
LESS_EQ_OP (264) 78
GRE_EQ_OP (265) 79
INCR_OP (266)
DECR_OP (267)
IDENTIFIER (268) 12 14 29
BOOL (269) 8
INT (270) 7
FLOAT (271) 10
DOUBLE (272) 11
CHAR (273) 13
DO (274) 122 123
WHILE (275) 120 121 122 123
IF (276) 67 68 69 70
ELIF (277) 80 82 83 84
FALSE (278) 133
TRUE (279) 132
IN (280) 129
OUT (281) 130 131
MAIN (282)
VOID (283) 9
FOR (284) 118 119
INTCONST (285) 134
CHAR_CONSTANT (286) 136
RETURN (287) 21
STRUCT (288) 12 14
SWITCH (289) 85 86
WHITESPACE (290)
CASE (291) 87 88 92 93
ELSE (292) 81
DEFAULT (293) 89 90
CONSTANT (294)
STRING (295)
INP_OP (296) 124 129
OUT_OP (297) 126 127 130 131
INC_OP (298) 58 59
DEC_OP (299) 60 61
DOUBLE_CONSTANT (300) 135


Nonterminals, with rules where they appear

$accept (67)
    on left: 0
START (68)
    on left: 1, on right: 0
OUTER (69)
    on left: 2 3 4 5 6, on right: 1 3 4 5
TYPE (70)
    on left: 7 8 9 10 11 12 13, on right: 17 32 34 36 37 38 39 106
STRUCT1 (71)
    on left: 14, on right: 4
MVARDEF (72)
    on left: 15 16, on right: 14 15
FUNCTION (73)
    on left: 17, on right: 5
INNER (74)
    on left: 18 19 20 21 22 23 24 25 26, on right: 17 18 19 20 22 23
    24 26 67 68 69 70 80 81 82 83 84 87 88 89 90 92 93 118 119 120
    121 122 123
VARNAME (75)
    on left: 27 28 29, on right: 17 27 28 32 34 36 37 38 39 40 41 42
    43 44 46 58 59 60 61 64 98 105 106 107 124 126 129 130
BRACKET (76)
    on left: 30 31, on right: 29 30
MARG (77)
    on left: 32 33, on right: 32 34
FARG (78)
    on left: 34 35, on right: 17
VARDEF (79)
    on left: 36 37 38 39, on right: 3 14 15 20
MVAR (80)
    on left: 40 41 42 43, on right: 38 39 40 41
MATH (81)
    on left: 44 45 46 47, on right: 24 102
RMATH (82)
    on left: 48 49 50, on right: 30 37 39 41 43 44 46 48 49 73 95 96
    105 106 107
RADDSUB (83)
    on left: 51 52 53, on right: 50 52 53
RMULTIDIV (84)
    on left: 54 55 56 57, on right: 51 54 55 56
UNARY_EXP (85)
    on left: 58 59 60 61 62 63 64, on right: 21 47 57 108
CONDITIONAL (86)
    on left: 65 66, on right: 19
IFN (87)
    on left: 67 68 69 70, on right: 65
COND (88)
    on left: 71 72 73 74 75 76 77 78 79, on right: 67 69 71 72 74 75
    76 77 78 79 80 82 85 103 120 122
ELSEC (89)
    on left: 80 81 82 83 84, on right: 69 70 80 84
SWITCHN (90)
    on left: 85 86, on right: 66
SWITCHINNER (91)
    on left: 87 88 89 90 91, on right: 85 86 87 88
WODEFAULT (92)
    on left: 92 93 94, on right: 89 90 92 93
ARGT (93)
    on left: 95, on right: 98
MARGT (94)
    on left: 96 97, on right: 95 96
FCALL (95)
    on left: 98, on right: 63
LOOP (96)
    on left: 99 100 101, on right: 18
FL1 (97)
    on left: 102, on right: 118
FL2 (98)
    on left: 103 104, on right: 118
FL3 (99)
    on left: 105 106 107 108 109, on right: 118
OPERATOR (100)
    on left: 110 111 112 113 114 115 116 117, on right: 46 107
FORN (101)
    on left: 118 119, on right: 99
WHILEN (102)
    on left: 120 121, on right: 100
DOWHILEN (103)
    on left: 122 123, on right: 101
MIN (104)
    on left: 124 125, on right: 124 129
MOUT (105)
    on left: 126 127 128, on right: 126 127 130 131
INPUT (106)
    on left: 129, on right: 22
OUTPUT (107)
    on left: 130 131, on right: 23
CONST (108)
    on left: 132 133 134 135 136, on right: 62 87 88 92 93 127 131


State 0

    0 $accept: . START $end

    error   shift, and go to state 1
    BOOL    shift, and go to state 2
    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    DOUBLE  shift, and go to state 5
    CHAR    shift, and go to state 6
    VOID    shift, and go to state 7
    STRUCT  shift, and go to state 8

    $end  reduce using rule 2 (OUTER)

    START     go to state 9
    OUTER     go to state 10
    TYPE      go to state 11
    STRUCT1   go to state 12
    FUNCTION  go to state 13
    VARDEF    go to state 14


State 1

    6 OUTER: error .

    $default  reduce using rule 6 (OUTER)


State 2

    8 TYPE: BOOL .

    $default  reduce using rule 8 (TYPE)


State 3

    7 TYPE: INT .

    $default  reduce using rule 7 (TYPE)


State 4

   10 TYPE: FLOAT .

    $default  reduce using rule 10 (TYPE)


State 5

   11 TYPE: DOUBLE .

    $default  reduce using rule 11 (TYPE)


State 6

   13 TYPE: CHAR .

    $default  reduce using rule 13 (TYPE)


State 7

    9 TYPE: VOID .

    $default  reduce using rule 9 (TYPE)


State 8

   12 TYPE: STRUCT . IDENTIFIER
   14 STRUCT1: STRUCT . IDENTIFIER '{' MVARDEF VARDEF ';' '}' ';'

    IDENTIFIER  shift, and go to state 15


State 9

    0 $accept: START . $end

    $end  shift, and go to state 16


State 10

    1 START: OUTER .

    $default  reduce using rule 1 (START)


State 11

   17 FUNCTION: TYPE . VARNAME '(' FARG ')' '{' INNER '}'
   36 VARDEF: TYPE . VARNAME ';'
   37       | TYPE . VARNAME '=' RMATH ';'
   38       | TYPE . MVAR VARNAME ';'
   39       | TYPE . MVAR VARNAME '=' RMATH ';'

    '&'         shift, and go to state 17
    '*'         shift, and go to state 18
    IDENTIFIER  shift, and go to state 19

    VARNAME  go to state 20
    MVAR     go to state 21


State 12

    4 OUTER: STRUCT1 . OUTER

    error   shift, and go to state 1
    BOOL    shift, and go to state 2
    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    DOUBLE  shift, and go to state 5
    CHAR    shift, and go to state 6
    VOID    shift, and go to state 7
    STRUCT  shift, and go to state 8

    $end  reduce using rule 2 (OUTER)

    OUTER     go to state 22
    TYPE      go to state 11
    STRUCT1   go to state 12
    FUNCTION  go to state 13
    VARDEF    go to state 14


State 13

    5 OUTER: FUNCTION . OUTER

    error   shift, and go to state 1
    BOOL    shift, and go to state 2
    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    DOUBLE  shift, and go to state 5
    CHAR    shift, and go to state 6
    VOID    shift, and go to state 7
    STRUCT  shift, and go to state 8

    $end  reduce using rule 2 (OUTER)

    OUTER     go to state 23
    TYPE      go to state 11
    STRUCT1   go to state 12
    FUNCTION  go to state 13
    VARDEF    go to state 14


State 14

    3 OUTER: VARDEF . OUTER

    error   shift, and go to state 1
    BOOL    shift, and go to state 2
    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    DOUBLE  shift, and go to state 5
    CHAR    shift, and go to state 6
    VOID    shift, and go to state 7
    STRUCT  shift, and go to state 8

    $end  reduce using rule 2 (OUTER)

    OUTER     go to state 24
    TYPE      go to state 11
    STRUCT1   go to state 12
    FUNCTION  go to state 13
    VARDEF    go to state 14


State 15

   12 TYPE: STRUCT IDENTIFIER .
   14 STRUCT1: STRUCT IDENTIFIER . '{' MVARDEF VARDEF ';' '}' ';'

    '{'  shift, and go to state 25

    $default  reduce using rule 12 (TYPE)


State 16

    0 $accept: START $end .

    $default  accept


State 17

   28 VARNAME: '&' . VARNAME

    '&'         shift, and go to state 17
    '*'         shift, and go to state 18
    IDENTIFIER  shift, and go to state 19

    VARNAME  go to state 26


State 18

   27 VARNAME: '*' . VARNAME

    '&'         shift, and go to state 17
    '*'         shift, and go to state 18
    IDENTIFIER  shift, and go to state 19

    VARNAME  go to state 27


State 19

   29 VARNAME: IDENTIFIER . BRACKET

    $default  reduce using rule 31 (BRACKET)

    BRACKET  go to state 28


State 20

   17 FUNCTION: TYPE VARNAME . '(' FARG ')' '{' INNER '}'
   36 VARDEF: TYPE VARNAME . ';'
   37       | TYPE VARNAME . '=' RMATH ';'
   42 MVAR: VARNAME . ','
   43     | VARNAME . '=' RMATH ','

    '='  shift, and go to state 29
    '('  shift, and go to state 30
    ';'  shift, and go to state 31
    ','  shift, and go to state 32


State 21

   38 VARDEF: TYPE MVAR . VARNAME ';'
   39       | TYPE MVAR . VARNAME '=' RMATH ';'
   40 MVAR: MVAR . VARNAME ','
   41     | MVAR . VARNAME '=' RMATH ','

    '&'         shift, and go to state 17
    '*'         shift, and go to state 18
    IDENTIFIER  shift, and go to state 19

    VARNAME  go to state 33


State 22

    4 OUTER: STRUCT1 OUTER .

    $default  reduce using rule 4 (OUTER)


State 23

    5 OUTER: FUNCTION OUTER .

    $default  reduce using rule 5 (OUTER)


State 24

    3 OUTER: VARDEF OUTER .

    $default  reduce using rule 3 (OUTER)


State 25

   14 STRUCT1: STRUCT IDENTIFIER '{' . MVARDEF VARDEF ';' '}' ';'

    $default  reduce using rule 16 (MVARDEF)

    MVARDEF  go to state 34


State 26

   28 VARNAME: '&' VARNAME .

    $default  reduce using rule 28 (VARNAME)


State 27

   27 VARNAME: '*' VARNAME .

    $default  reduce using rule 27 (VARNAME)


State 28

   29 VARNAME: IDENTIFIER BRACKET .
   30 BRACKET: BRACKET . '[' RMATH ']'

    '['  shift, and go to state 35

    $default  reduce using rule 29 (VARNAME)


State 29

   37 VARDEF: TYPE VARNAME '=' . RMATH ';'
   43 MVAR: VARNAME '=' . RMATH ','

    '&'              shift, and go to state 17
    '*'              shift, and go to state 18
    '('              shift, and go to state 36
    IDENTIFIER       shift, and go to state 19
    FALSE            shift, and go to state 37
    TRUE             shift, and go to state 38
    INTCONST         shift, and go to state 39
    CHAR_CONSTANT    shift, and go to state 40
    INC_OP           shift, and go to state 41
    DEC_OP           shift, and go to state 42
    DOUBLE_CONSTANT  shift, and go to state 43
    '!'              shift, and go to state 44

    VARNAME    go to state 45
    RMATH      go to state 46
    RADDSUB    go to state 47
    RMULTIDIV  go to state 48
    UNARY_EXP  go to state 49
    FCALL      go to state 50
    CONST      go to state 51


State 30

   17 FUNCTION: TYPE VARNAME '(' . FARG ')' '{' INNER '}'

    ')'       reduce using rule 35 (FARG)
    $default  reduce using rule 33 (MARG)

    MARG  go to state 52
    FARG  go to state 53


State 31

   36 VARDEF: TYPE VARNAME ';' .

    $default  reduce using rule 36 (VARDEF)


State 32

   42 MVAR: VARNAME ',' .

    $default  reduce using rule 42 (MVAR)


State 33

   38 VARDEF: TYPE MVAR VARNAME . ';'
   39       | TYPE MVAR VARNAME . '=' RMATH ';'
   40 MVAR: MVAR VARNAME . ','
   41     | MVAR VARNAME . '=' RMATH ','

    '='  shift, and go to state 54
    ';'  shift, and go to state 55
    ','  shift, and go to state 56


State 34

   14 STRUCT1: STRUCT IDENTIFIER '{' MVARDEF . VARDEF ';' '}' ';'
   15 MVARDEF: MVARDEF . VARDEF ';'

    BOOL    shift, and go to state 2
    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    DOUBLE  shift, and go to state 5
    CHAR    shift, and go to state 6
    VOID    shift, and go to state 7
    STRUCT  shift, and go to state 57

    TYPE    go to state 58
    VARDEF  go to state 59


State 35

   30 BRACKET: BRACKET '[' . RMATH ']'

    '&'              shift, and go to state 17
    '*'              shift, and go to state 18
    '('              shift, and go to state 36
    IDENTIFIER       shift, and go to state 19
    FALSE            shift, and go to state 37
    TRUE             shift, and go to state 38
    INTCONST         shift, and go to state 39
    CHAR_CONSTANT    shift, and go to state 40
    INC_OP           shift, and go to state 41
    DEC_OP           shift, and go to state 42
    DOUBLE_CONSTANT  shift, and go to state 43
    '!'              shift, and go to state 44

    VARNAME    go to state 45
    RMATH      go to state 60
    RADDSUB    go to state 47
    RMULTIDIV  go to state 48
    UNARY_EXP  go to state 49
    FCALL      go to state 50
    CONST      go to state 51


State 36

   48 RMATH: '(' . RMATH ')'

    '&'              shift, and go to state 17
    '*'              shift, and go to state 18
    '('              shift, and go to state 36
    IDENTIFIER       shift, and go to state 19
    FALSE            shift, and go to state 37
    TRUE             shift, and go to state 38
    INTCONST         shift, and go to state 39
    CHAR_CONSTANT    shift, and go to state 40
    INC_OP           shift, and go to state 41
    DEC_OP           shift, and go to state 42
    DOUBLE_CONSTANT  shift, and go to state 43
    '!'              shift, and go to state 44

    VARNAME    go to state 45
    RMATH      go to state 61
    RADDSUB    go to state 47
    RMULTIDIV  go to state 48
    UNARY_EXP  go to state 49
    FCALL      go to state 50
    CONST      go to state 51


State 37

  133 CONST: FALSE .

    $default  reduce using rule 133 (CONST)


State 38

  132 CONST: TRUE .

    $default  reduce using rule 132 (CONST)


State 39

  134 CONST: INTCONST .

    $default  reduce using rule 134 (CONST)


State 40

  136 CONST: CHAR_CONSTANT .

    $default  reduce using rule 136 (CONST)


State 41

   59 UNARY_EXP: INC_OP . VARNAME

    '&'         shift, and go to state 17
    '*'         shift, and go to state 18
    IDENTIFIER  shift, and go to state 19

    VARNAME  go to state 62


State 42

   61 UNARY_EXP: DEC_OP . VARNAME

    '&'         shift, and go to state 17
    '*'         shift, and go to state 18
    IDENTIFIER  shift, and go to state 19

    VARNAME  go to state 63


State 43

  135 CONST: DOUBLE_CONSTANT .

    $default  reduce using rule 135 (CONST)


State 44

   49 RMATH: '!' . RMATH

    '&'              shift, and go to state 17
    '*'              shift, and go to state 18
    '('              shift, and go to state 36
    IDENTIFIER       shift, and go to state 19
    FALSE            shift, and go to state 37
    TRUE             shift, and go to state 38
    INTCONST         shift, and go to state 39
    CHAR_CONSTANT    shift, and go to state 40
    INC_OP           shift, and go to state 41
    DEC_OP           shift, and go to state 42
    DOUBLE_CONSTANT  shift, and go to state 43
    '!'              shift, and go to state 44

    VARNAME    go to state 45
    RMATH      go to state 64
    RADDSUB    go to state 47
    RMULTIDIV  go to state 48
    UNARY_EXP  go to state 49
    FCALL      go to state 50
    CONST      go to state 51


State 45

   58 UNARY_EXP: VARNAME . INC_OP
   60          | VARNAME . DEC_OP
   64          | VARNAME .
   98 FCALL: VARNAME . '(' ARGT ')'

    '('     shift, and go to state 65
    INC_OP  shift, and go to state 66
    DEC_OP  shift, and go to state 67

    $default  reduce using rule 64 (UNARY_EXP)


State 46

   37 VARDEF: TYPE VARNAME '=' RMATH . ';'
   43 MVAR: VARNAME '=' RMATH . ','

    ';'  shift, and go to state 68
    ','  shift, and go to state 69


State 47

   50 RMATH: RADDSUB .
   52 RADDSUB: RADDSUB . '-' RADDSUB
   53        | RADDSUB . '+' RADDSUB

    '+'  shift, and go to state 70
    '-'  shift, and go to state 71

    $default  reduce using rule 50 (RMATH)


State 48

   51 RADDSUB: RMULTIDIV .
   54 RMULTIDIV: RMULTIDIV . '*' RMULTIDIV
   55          | RMULTIDIV . '/' RMULTIDIV
   56          | RMULTIDIV . '%' RMULTIDIV

    '*'  shift, and go to state 72
    '/'  shift, and go to state 73
    '%'  shift, and go to state 74

    $default  reduce using rule 51 (RADDSUB)


State 49

   57 RMULTIDIV: UNARY_EXP .

    $default  reduce using rule 57 (RMULTIDIV)


State 50

   63 UNARY_EXP: FCALL .

    $default  reduce using rule 63 (UNARY_EXP)


State 51

   62 UNARY_EXP: CONST .

    $default  reduce using rule 62 (UNARY_EXP)


State 52

   32 MARG: MARG . TYPE VARNAME ','
   34 FARG: MARG . TYPE VARNAME

    BOOL    shift, and go to state 2
    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    DOUBLE  shift, and go to state 5
    CHAR    shift, and go to state 6
    VOID    shift, and go to state 7
    STRUCT  shift, and go to state 57

    TYPE  go to state 75


State 53

   17 FUNCTION: TYPE VARNAME '(' FARG . ')' '{' INNER '}'

    ')'  shift, and go to state 76


State 54

   39 VARDEF: TYPE MVAR VARNAME '=' . RMATH ';'
   41 MVAR: MVAR VARNAME '=' . RMATH ','

    '&'              shift, and go to state 17
    '*'              shift, and go to state 18
    '('              shift, and go to state 36
    IDENTIFIER       shift, and go to state 19
    FALSE            shift, and go to state 37
    TRUE             shift, and go to state 38
    INTCONST         shift, and go to state 39
    CHAR_CONSTANT    shift, and go to state 40
    INC_OP           shift, and go to state 41
    DEC_OP           shift, and go to state 42
    DOUBLE_CONSTANT  shift, and go to state 43
    '!'              shift, and go to state 44

    VARNAME    go to state 45
    RMATH      go to state 77
    RADDSUB    go to state 47
    RMULTIDIV  go to state 48
    UNARY_EXP  go to state 49
    FCALL      go to state 50
    CONST      go to state 51


State 55

   38 VARDEF: TYPE MVAR VARNAME ';' .

    $default  reduce using rule 38 (VARDEF)


State 56

   40 MVAR: MVAR VARNAME ',' .

    $default  reduce using rule 40 (MVAR)


State 57

   12 TYPE: STRUCT . IDENTIFIER

    IDENTIFIER  shift, and go to state 78


State 58

   36 VARDEF: TYPE . VARNAME ';'
   37       | TYPE . VARNAME '=' RMATH ';'
   38       | TYPE . MVAR VARNAME ';'
   39       | TYPE . MVAR VARNAME '=' RMATH ';'

    '&'         shift, and go to state 17
    '*'         shift, and go to state 18
    IDENTIFIER  shift, and go to state 19

    VARNAME  go to state 79
    MVAR     go to state 21


State 59

   14 STRUCT1: STRUCT IDENTIFIER '{' MVARDEF VARDEF . ';' '}' ';'
   15 MVARDEF: MVARDEF VARDEF . ';'

    ';'  shift, and go to state 80


State 60

   30 BRACKET: BRACKET '[' RMATH . ']'

    ']'  shift, and go to state 81


State 61

   48 RMATH: '(' RMATH . ')'

    ')'  shift, and go to state 82


State 62

   59 UNARY_EXP: INC_OP VARNAME .

    $default  reduce using rule 59 (UNARY_EXP)


State 63

   61 UNARY_EXP: DEC_OP VARNAME .

    $default  reduce using rule 61 (UNARY_EXP)


State 64

   49 RMATH: '!' RMATH .

    $default  reduce using rule 49 (RMATH)


State 65

   98 FCALL: VARNAME '(' . ARGT ')'

    $default  reduce using rule 97 (MARGT)

    ARGT   go to state 83
    MARGT  go to state 84


State 66

   58 UNARY_EXP: VARNAME INC_OP .

    $default  reduce using rule 58 (UNARY_EXP)


State 67

   60 UNARY_EXP: VARNAME DEC_OP .

    $default  reduce using rule 60 (UNARY_EXP)


State 68

   37 VARDEF: TYPE VARNAME '=' RMATH ';' .

    $default  reduce using rule 37 (VARDEF)


State 69

   43 MVAR: VARNAME '=' RMATH ',' .

    $default  reduce using rule 43 (MVAR)


State 70

   53 RADDSUB: RADDSUB '+' . RADDSUB

    '&'              shift, and go to state 17
    '*'              shift, and go to state 18
    IDENTIFIER       shift, and go to state 19
    FALSE            shift, and go to state 37
    TRUE             shift, and go to state 38
    INTCONST         shift, and go to state 39
    CHAR_CONSTANT    shift, and go to state 40
    INC_OP           shift, and go to state 41
    DEC_OP           shift, and go to state 42
    DOUBLE_CONSTANT  shift, and go to state 43

    VARNAME    go to state 45
    RADDSUB    go to state 85
    RMULTIDIV  go to state 48
    UNARY_EXP  go to state 49
    FCALL      go to state 50
    CONST      go to state 51


State 71

   52 RADDSUB: RADDSUB '-' . RADDSUB

    '&'              shift, and go to state 17
    '*'              shift, and go to state 18
    IDENTIFIER       shift, and go to state 19
    FALSE            shift, and go to state 37
    TRUE             shift, and go to state 38
    INTCONST         shift, and go to state 39
    CHAR_CONSTANT    shift, and go to state 40
    INC_OP           shift, and go to state 41
    DEC_OP           shift, and go to state 42
    DOUBLE_CONSTANT  shift, and go to state 43

    VARNAME    go to state 45
    RADDSUB    go to state 86
    RMULTIDIV  go to state 48
    UNARY_EXP  go to state 49
    FCALL      go to state 50
    CONST      go to state 51


State 72

   54 RMULTIDIV: RMULTIDIV '*' . RMULTIDIV

    '&'              shift, and go to state 17
    '*'              shift, and go to state 18
    IDENTIFIER       shift, and go to state 19
    FALSE            shift, and go to state 37
    TRUE             shift, and go to state 38
    INTCONST         shift, and go to state 39
    CHAR_CONSTANT    shift, and go to state 40
    INC_OP           shift, and go to state 41
    DEC_OP           shift, and go to state 42
    DOUBLE_CONSTANT  shift, and go to state 43

    VARNAME    go to state 45
    RMULTIDIV  go to state 87
    UNARY_EXP  go to state 49
    FCALL      go to state 50
    CONST      go to state 51


State 73

   55 RMULTIDIV: RMULTIDIV '/' . RMULTIDIV

    '&'              shift, and go to state 17
    '*'              shift, and go to state 18
    IDENTIFIER       shift, and go to state 19
    FALSE            shift, and go to state 37
    TRUE             shift, and go to state 38
    INTCONST         shift, and go to state 39
    CHAR_CONSTANT    shift, and go to state 40
    INC_OP           shift, and go to state 41
    DEC_OP           shift, and go to state 42
    DOUBLE_CONSTANT  shift, and go to state 43

    VARNAME    go to state 45
    RMULTIDIV  go to state 88
    UNARY_EXP  go to state 49
    FCALL      go to state 50
    CONST      go to state 51


State 74

   56 RMULTIDIV: RMULTIDIV '%' . RMULTIDIV

    '&'              shift, and go to state 17
    '*'              shift, and go to state 18
    IDENTIFIER       shift, and go to state 19
    FALSE            shift, and go to state 37
    TRUE             shift, and go to state 38
    INTCONST         shift, and go to state 39
    CHAR_CONSTANT    shift, and go to state 40
    INC_OP           shift, and go to state 41
    DEC_OP           shift, and go to state 42
    DOUBLE_CONSTANT  shift, and go to state 43

    VARNAME    go to state 45
    RMULTIDIV  go to state 89
    UNARY_EXP  go to state 49
    FCALL      go to state 50
    CONST      go to state 51


State 75

   32 MARG: MARG TYPE . VARNAME ','
   34 FARG: MARG TYPE . VARNAME

    '&'         shift, and go to state 17
    '*'         shift, and go to state 18
    IDENTIFIER  shift, and go to state 19

    VARNAME  go to state 90


State 76

   17 FUNCTION: TYPE VARNAME '(' FARG ')' . '{' INNER '}'

    '{'  shift, and go to state 91


State 77

   39 VARDEF: TYPE MVAR VARNAME '=' RMATH . ';'
   41 MVAR: MVAR VARNAME '=' RMATH . ','

    ';'  shift, and go to state 92
    ','  shift, and go to state 93


State 78

   12 TYPE: STRUCT IDENTIFIER .

    $default  reduce using rule 12 (TYPE)


State 79

   36 VARDEF: TYPE VARNAME . ';'
   37       | TYPE VARNAME . '=' RMATH ';'
   42 MVAR: VARNAME . ','
   43     | VARNAME . '=' RMATH ','

    '='  shift, and go to state 29
    ';'  shift, and go to state 31
    ','  shift, and go to state 32


State 80

   14 STRUCT1: STRUCT IDENTIFIER '{' MVARDEF VARDEF ';' . '}' ';'
   15 MVARDEF: MVARDEF VARDEF ';' .

    '}'  shift, and go to state 94

    $default  reduce using rule 15 (MVARDEF)


State 81

   30 BRACKET: BRACKET '[' RMATH ']' .

    $default  reduce using rule 30 (BRACKET)


State 82

   48 RMATH: '(' RMATH ')' .

    $default  reduce using rule 48 (RMATH)


State 83

   98 FCALL: VARNAME '(' ARGT . ')'

    ')'  shift, and go to state 95


State 84

   95 ARGT: MARGT . RMATH
   96 MARGT: MARGT . RMATH ','

    '&'              shift, and go to state 17
    '*'              shift, and go to state 18
    '('              shift, and go to state 36
    IDENTIFIER       shift, and go to state 19
    FALSE            shift, and go to state 37
    TRUE             shift, and go to state 38
    INTCONST         shift, and go to state 39
    CHAR_CONSTANT    shift, and go to state 40
    INC_OP           shift, and go to state 41
    DEC_OP           shift, and go to state 42
    DOUBLE_CONSTANT  shift, and go to state 43
    '!'              shift, and go to state 44

    VARNAME    go to state 45
    RMATH      go to state 96
    RADDSUB    go to state 47
    RMULTIDIV  go to state 48
    UNARY_EXP  go to state 49
    FCALL      go to state 50
    CONST      go to state 51


State 85

   52 RADDSUB: RADDSUB . '-' RADDSUB
   53        | RADDSUB . '+' RADDSUB
   53        | RADDSUB '+' RADDSUB .

    $default  reduce using rule 53 (RADDSUB)


State 86

   52 RADDSUB: RADDSUB . '-' RADDSUB
   52        | RADDSUB '-' RADDSUB .
   53        | RADDSUB . '+' RADDSUB

    $default  reduce using rule 52 (RADDSUB)


State 87

   54 RMULTIDIV: RMULTIDIV . '*' RMULTIDIV
   54          | RMULTIDIV '*' RMULTIDIV .
   55          | RMULTIDIV . '/' RMULTIDIV
   56          | RMULTIDIV . '%' RMULTIDIV

    $default  reduce using rule 54 (RMULTIDIV)


State 88

   54 RMULTIDIV: RMULTIDIV . '*' RMULTIDIV
   55          | RMULTIDIV . '/' RMULTIDIV
   55          | RMULTIDIV '/' RMULTIDIV .
   56          | RMULTIDIV . '%' RMULTIDIV

    $default  reduce using rule 55 (RMULTIDIV)


State 89

   54 RMULTIDIV: RMULTIDIV . '*' RMULTIDIV
   55          | RMULTIDIV . '/' RMULTIDIV
   56          | RMULTIDIV . '%' RMULTIDIV
   56          | RMULTIDIV '%' RMULTIDIV .

    $default  reduce using rule 56 (RMULTIDIV)


State 90

   32 MARG: MARG TYPE VARNAME . ','
   34 FARG: MARG TYPE VARNAME .

    ','  shift, and go to state 97

    $default  reduce using rule 34 (FARG)


State 91

   17 FUNCTION: TYPE VARNAME '(' FARG ')' '{' . INNER '}'

    error            shift, and go to state 98
    '&'              shift, and go to state 17
    '*'              shift, and go to state 18
    IDENTIFIER       shift, and go to state 19
    BOOL             shift, and go to state 2
    INT              shift, and go to state 3
    FLOAT            shift, and go to state 4
    DOUBLE           shift, and go to state 5
    CHAR             shift, and go to state 6
    DO               shift, and go to state 99
    WHILE            shift, and go to state 100
    IF               shift, and go to state 101
    FALSE            shift, and go to state 37
    TRUE             shift, and go to state 38
    IN               shift, and go to state 102
    OUT              shift, and go to state 103
    VOID             shift, and go to state 7
    FOR              shift, and go to state 104
    INTCONST         shift, and go to state 39
    CHAR_CONSTANT    shift, and go to state 40
    RETURN           shift, and go to state 105
    STRUCT           shift, and go to state 57
    SWITCH           shift, and go to state 106
    INC_OP           shift, and go to state 41
    DEC_OP           shift, and go to state 42
    DOUBLE_CONSTANT  shift, and go to state 43
    ';'              shift, and go to state 107

    '}'  reduce using rule 25 (INNER)

    TYPE         go to state 58
    INNER        go to state 108
    VARNAME      go to state 109
    VARDEF       go to state 110
    MATH         go to state 111
    UNARY_EXP    go to state 112
    CONDITIONAL  go to state 113
    IFN          go to state 114
    SWITCHN      go to state 115
    FCALL        go to state 50
    LOOP         go to state 116
    FORN         go to state 117
    WHILEN       go to state 118
    DOWHILEN     go to state 119
    INPUT        go to state 120
    OUTPUT       go to state 121
    CONST        go to state 51


State 92

   39 VARDEF: TYPE MVAR VARNAME '=' RMATH ';' .

    $default  reduce using rule 39 (VARDEF)


State 93

   41 MVAR: MVAR VARNAME '=' RMATH ',' .

    $default  reduce using rule 41 (MVAR)


State 94

   14 STRUCT1: STRUCT IDENTIFIER '{' MVARDEF VARDEF ';' '}' . ';'

    ';'  shift, and go to state 122


State 95

   98 FCALL: VARNAME '(' ARGT ')' .

    $default  reduce using rule 98 (FCALL)


State 96

   95 ARGT: MARGT RMATH .
   96 MARGT: MARGT RMATH . ','

    ','  shift, and go to state 123

    $default  reduce using rule 95 (ARGT)


State 97

   32 MARG: MARG TYPE VARNAME ',' .

    $default  reduce using rule 32 (MARG)


State 98

   26 INNER: error . INNER

    error            shift, and go to state 98
    '&'              shift, and go to state 17
    '*'              shift, and go to state 18
    IDENTIFIER       shift, and go to state 19
    BOOL             shift, and go to state 2
    INT              shift, and go to state 3
    FLOAT            shift, and go to state 4
    DOUBLE           shift, and go to state 5
    CHAR             shift, and go to state 6
    DO               shift, and go to state 99
    WHILE            shift, and go to state 100
    IF               shift, and go to state 101
    FALSE            shift, and go to state 37
    TRUE             shift, and go to state 38
    IN               shift, and go to state 102
    OUT              shift, and go to state 103
    VOID             shift, and go to state 7
    FOR              shift, and go to state 104
    INTCONST         shift, and go to state 39
    CHAR_CONSTANT    shift, and go to state 40
    RETURN           shift, and go to state 105
    STRUCT           shift, and go to state 57
    SWITCH           shift, and go to state 106
    INC_OP           shift, and go to state 41
    DEC_OP           shift, and go to state 42
    DOUBLE_CONSTANT  shift, and go to state 43
    ';'              shift, and go to state 107

    CASE     reduce using rule 25 (INNER)
    DEFAULT  reduce using rule 25 (INNER)
    '}'      reduce using rule 25 (INNER)

    TYPE         go to state 58
    INNER        go to state 124
    VARNAME      go to state 109
    VARDEF       go to state 110
    MATH         go to state 111
    UNARY_EXP    go to state 112
    CONDITIONAL  go to state 113
    IFN          go to state 114
    SWITCHN      go to state 115
    FCALL        go to state 50
    LOOP         go to state 116
    FORN         go to state 117
    WHILEN       go to state 118
    DOWHILEN     go to state 119
    INPUT        go to state 120
    OUTPUT       go to state 121
    CONST        go to state 51


State 99

  122 DOWHILEN: DO . '{' INNER '}' WHILE '(' COND ')' ';'
  123         | DO . '{' INNER '}' WHILE '(' error ')' ';'

    '{'  shift, and go to state 125


State 100

  120 WHILEN: WHILE . '(' COND ')' '{' INNER '}'
  121       | WHILE . '(' error ')' '{' INNER '}'

    '('  shift, and go to state 126


State 101

   67 IFN: IF . '(' COND ')' '{' INNER '}'
   68    | IF . '(' error ')' '{' INNER '}'
   69    | IF . '(' COND ')' '{' INNER '}' ELSEC
   70    | IF . '(' error ')' '{' INNER '}' ELSEC

    '('  shift, and go to state 127


State 102

  129 INPUT: IN . MIN INP_OP VARNAME ';'

    $default  reduce using rule 125 (MIN)

    MIN  go to state 128


State 103

  130 OUTPUT: OUT . MOUT OUT_OP VARNAME ';'
  131       | OUT . MOUT OUT_OP CONST ';'

    $default  reduce using rule 128 (MOUT)

    MOUT  go to state 129


State 104

  118 FORN: FOR . '(' FL1 FL2 ';' FL3 ')' '{' INNER '}'
  119     | FOR . '(' error ')' '{' INNER '}'

    '('  shift, and go to state 130


State 105

   21 INNER: RETURN . UNARY_EXP ';'

    '&'              shift, and go to state 17
    '*'              shift, and go to state 18
    IDENTIFIER       shift, and go to state 19
    FALSE            shift, and go to state 37
    TRUE             shift, and go to state 38
    INTCONST         shift, and go to state 39
    CHAR_CONSTANT    shift, and go to state 40
    INC_OP           shift, and go to state 41
    DEC_OP           shift, and go to state 42
    DOUBLE_CONSTANT  shift, and go to state 43

    VARNAME    go to state 45
    UNARY_EXP  go to state 131
    FCALL      go to state 50
    CONST      go to state 51


State 106

   85 SWITCHN: SWITCH . '(' COND ')' '{' SWITCHINNER '}'
   86        | SWITCH . '(' error ')' '{' SWITCHINNER '}'

    '('  shift, and go to state 132


State 107

   45 MATH: ';' .

    $default  reduce using rule 45 (MATH)


State 108

   17 FUNCTION: TYPE VARNAME '(' FARG ')' '{' INNER . '}'

    '}'  shift, and go to state 133


State 109

   44 MATH: VARNAME . '=' RMATH ';'
   46     | VARNAME . OPERATOR '=' RMATH ';'
   58 UNARY_EXP: VARNAME . INC_OP
   60          | VARNAME . DEC_OP
   64          | VARNAME .
   98 FCALL: VARNAME . '(' ARGT ')'

    '='     shift, and go to state 134
    '|'     shift, and go to state 135
    '^'     shift, and go to state 136
    '&'     shift, and go to state 137
    '+'     shift, and go to state 138
    '-'     shift, and go to state 139
    '*'     shift, and go to state 140
    '/'     shift, and go to state 141
    '%'     shift, and go to state 142
    '('     shift, and go to state 65
    INC_OP  shift, and go to state 66
    DEC_OP  shift, and go to state 67

    $default  reduce using rule 64 (UNARY_EXP)

    OPERATOR  go to state 143


State 110

   20 INNER: VARDEF . INNER

    error            shift, and go to state 98
    '&'              shift, and go to state 17
    '*'              shift, and go to state 18
    IDENTIFIER       shift, and go to state 19
    BOOL             shift, and go to state 2
    INT              shift, and go to state 3
    FLOAT            shift, and go to state 4
    DOUBLE           shift, and go to state 5
    CHAR             shift, and go to state 6
    DO               shift, and go to state 99
    WHILE            shift, and go to state 100
    IF               shift, and go to state 101
    FALSE            shift, and go to state 37
    TRUE             shift, and go to state 38
    IN               shift, and go to state 102
    OUT              shift, and go to state 103
    VOID             shift, and go to state 7
    FOR              shift, and go to state 104
    INTCONST         shift, and go to state 39
    CHAR_CONSTANT    shift, and go to state 40
    RETURN           shift, and go to state 105
    STRUCT           shift, and go to state 57
    SWITCH           shift, and go to state 106
    INC_OP           shift, and go to state 41
    DEC_OP           shift, and go to state 42
    DOUBLE_CONSTANT  shift, and go to state 43
    ';'              shift, and go to state 107

    CASE     reduce using rule 25 (INNER)
    DEFAULT  reduce using rule 25 (INNER)
    '}'      reduce using rule 25 (INNER)

    TYPE         go to state 58
    INNER        go to state 144
    VARNAME      go to state 109
    VARDEF       go to state 110
    MATH         go to state 111
    UNARY_EXP    go to state 112
    CONDITIONAL  go to state 113
    IFN          go to state 114
    SWITCHN      go to state 115
    FCALL        go to state 50
    LOOP         go to state 116
    FORN         go to state 117
    WHILEN       go to state 118
    DOWHILEN     go to state 119
    INPUT        go to state 120
    OUTPUT       go to state 121
    CONST        go to state 51


State 111

   24 INNER: MATH . INNER

    error            shift, and go to state 98
    '&'              shift, and go to state 17
    '*'              shift, and go to state 18
    IDENTIFIER       shift, and go to state 19
    BOOL             shift, and go to state 2
    INT              shift, and go to state 3
    FLOAT            shift, and go to state 4
    DOUBLE           shift, and go to state 5
    CHAR             shift, and go to state 6
    DO               shift, and go to state 99
    WHILE            shift, and go to state 100
    IF               shift, and go to state 101
    FALSE            shift, and go to state 37
    TRUE             shift, and go to state 38
    IN               shift, and go to state 102
    OUT              shift, and go to state 103
    VOID             shift, and go to state 7
    FOR              shift, and go to state 104
    INTCONST         shift, and go to state 39
    CHAR_CONSTANT    shift, and go to state 40
    RETURN           shift, and go to state 105
    STRUCT           shift, and go to state 57
    SWITCH           shift, and go to state 106
    INC_OP           shift, and go to state 41
    DEC_OP           shift, and go to state 42
    DOUBLE_CONSTANT  shift, and go to state 43
    ';'              shift, and go to state 107

    CASE     reduce using rule 25 (INNER)
    DEFAULT  reduce using rule 25 (INNER)
    '}'      reduce using rule 25 (INNER)

    TYPE         go to state 58
    INNER        go to state 145
    VARNAME      go to state 109
    VARDEF       go to state 110
    MATH         go to state 111
    UNARY_EXP    go to state 112
    CONDITIONAL  go to state 113
    IFN          go to state 114
    SWITCHN      go to state 115
    FCALL        go to state 50
    LOOP         go to state 116
    FORN         go to state 117
    WHILEN       go to state 118
    DOWHILEN     go to state 119
    INPUT        go to state 120
    OUTPUT       go to state 121
    CONST        go to state 51


State 112

   47 MATH: UNARY_EXP . ';'

    ';'  shift, and go to state 146


State 113

   19 INNER: CONDITIONAL . INNER

    error            shift, and go to state 98
    '&'              shift, and go to state 17
    '*'              shift, and go to state 18
    IDENTIFIER       shift, and go to state 19
    BOOL             shift, and go to state 2
    INT              shift, and go to state 3
    FLOAT            shift, and go to state 4
    DOUBLE           shift, and go to state 5
    CHAR             shift, and go to state 6
    DO               shift, and go to state 99
    WHILE            shift, and go to state 100
    IF               shift, and go to state 101
    FALSE            shift, and go to state 37
    TRUE             shift, and go to state 38
    IN               shift, and go to state 102
    OUT              shift, and go to state 103
    VOID             shift, and go to state 7
    FOR              shift, and go to state 104
    INTCONST         shift, and go to state 39
    CHAR_CONSTANT    shift, and go to state 40
    RETURN           shift, and go to state 105
    STRUCT           shift, and go to state 57
    SWITCH           shift, and go to state 106
    INC_OP           shift, and go to state 41
    DEC_OP           shift, and go to state 42
    DOUBLE_CONSTANT  shift, and go to state 43
    ';'              shift, and go to state 107

    CASE     reduce using rule 25 (INNER)
    DEFAULT  reduce using rule 25 (INNER)
    '}'      reduce using rule 25 (INNER)

    TYPE         go to state 58
    INNER        go to state 147
    VARNAME      go to state 109
    VARDEF       go to state 110
    MATH         go to state 111
    UNARY_EXP    go to state 112
    CONDITIONAL  go to state 113
    IFN          go to state 114
    SWITCHN      go to state 115
    FCALL        go to state 50
    LOOP         go to state 116
    FORN         go to state 117
    WHILEN       go to state 118
    DOWHILEN     go to state 119
    INPUT        go to state 120
    OUTPUT       go to state 121
    CONST        go to state 51


State 114

   65 CONDITIONAL: IFN .

    $default  reduce using rule 65 (CONDITIONAL)


State 115

   66 CONDITIONAL: SWITCHN .

    $default  reduce using rule 66 (CONDITIONAL)


State 116

   18 INNER: LOOP . INNER

    error            shift, and go to state 98
    '&'              shift, and go to state 17
    '*'              shift, and go to state 18
    IDENTIFIER       shift, and go to state 19
    BOOL             shift, and go to state 2
    INT              shift, and go to state 3
    FLOAT            shift, and go to state 4
    DOUBLE           shift, and go to state 5
    CHAR             shift, and go to state 6
    DO               shift, and go to state 99
    WHILE            shift, and go to state 100
    IF               shift, and go to state 101
    FALSE            shift, and go to state 37
    TRUE             shift, and go to state 38
    IN               shift, and go to state 102
    OUT              shift, and go to state 103
    VOID             shift, and go to state 7
    FOR              shift, and go to state 104
    INTCONST         shift, and go to state 39
    CHAR_CONSTANT    shift, and go to state 40
    RETURN           shift, and go to state 105
    STRUCT           shift, and go to state 57
    SWITCH           shift, and go to state 106
    INC_OP           shift, and go to state 41
    DEC_OP           shift, and go to state 42
    DOUBLE_CONSTANT  shift, and go to state 43
    ';'              shift, and go to state 107

    CASE     reduce using rule 25 (INNER)
    DEFAULT  reduce using rule 25 (INNER)
    '}'      reduce using rule 25 (INNER)

    TYPE         go to state 58
    INNER        go to state 148
    VARNAME      go to state 109
    VARDEF       go to state 110
    MATH         go to state 111
    UNARY_EXP    go to state 112
    CONDITIONAL  go to state 113
    IFN          go to state 114
    SWITCHN      go to state 115
    FCALL        go to state 50
    LOOP         go to state 116
    FORN         go to state 117
    WHILEN       go to state 118
    DOWHILEN     go to state 119
    INPUT        go to state 120
    OUTPUT       go to state 121
    CONST        go to state 51


State 117

   99 LOOP: FORN .

    $default  reduce using rule 99 (LOOP)


State 118

  100 LOOP: WHILEN .

    $default  reduce using rule 100 (LOOP)


State 119

  101 LOOP: DOWHILEN .

    $default  reduce using rule 101 (LOOP)


State 120

   22 INNER: INPUT . INNER

    error            shift, and go to state 98
    '&'              shift, and go to state 17
    '*'              shift, and go to state 18
    IDENTIFIER       shift, and go to state 19
    BOOL             shift, and go to state 2
    INT              shift, and go to state 3
    FLOAT            shift, and go to state 4
    DOUBLE           shift, and go to state 5
    CHAR             shift, and go to state 6
    DO               shift, and go to state 99
    WHILE            shift, and go to state 100
    IF               shift, and go to state 101
    FALSE            shift, and go to state 37
    TRUE             shift, and go to state 38
    IN               shift, and go to state 102
    OUT              shift, and go to state 103
    VOID             shift, and go to state 7
    FOR              shift, and go to state 104
    INTCONST         shift, and go to state 39
    CHAR_CONSTANT    shift, and go to state 40
    RETURN           shift, and go to state 105
    STRUCT           shift, and go to state 57
    SWITCH           shift, and go to state 106
    INC_OP           shift, and go to state 41
    DEC_OP           shift, and go to state 42
    DOUBLE_CONSTANT  shift, and go to state 43
    ';'              shift, and go to state 107

    CASE     reduce using rule 25 (INNER)
    DEFAULT  reduce using rule 25 (INNER)
    '}'      reduce using rule 25 (INNER)

    TYPE         go to state 58
    INNER        go to state 149
    VARNAME      go to state 109
    VARDEF       go to state 110
    MATH         go to state 111
    UNARY_EXP    go to state 112
    CONDITIONAL  go to state 113
    IFN          go to state 114
    SWITCHN      go to state 115
    FCALL        go to state 50
    LOOP         go to state 116
    FORN         go to state 117
    WHILEN       go to state 118
    DOWHILEN     go to state 119
    INPUT        go to state 120
    OUTPUT       go to state 121
    CONST        go to state 51


State 121

   23 INNER: OUTPUT . INNER

    error            shift, and go to state 98
    '&'              shift, and go to state 17
    '*'              shift, and go to state 18
    IDENTIFIER       shift, and go to state 19
    BOOL             shift, and go to state 2
    INT              shift, and go to state 3
    FLOAT            shift, and go to state 4
    DOUBLE           shift, and go to state 5
    CHAR             shift, and go to state 6
    DO               shift, and go to state 99
    WHILE            shift, and go to state 100
    IF               shift, and go to state 101
    FALSE            shift, and go to state 37
    TRUE             shift, and go to state 38
    IN               shift, and go to state 102
    OUT              shift, and go to state 103
    VOID             shift, and go to state 7
    FOR              shift, and go to state 104
    INTCONST         shift, and go to state 39
    CHAR_CONSTANT    shift, and go to state 40
    RETURN           shift, and go to state 105
    STRUCT           shift, and go to state 57
    SWITCH           shift, and go to state 106
    INC_OP           shift, and go to state 41
    DEC_OP           shift, and go to state 42
    DOUBLE_CONSTANT  shift, and go to state 43
    ';'              shift, and go to state 107

    CASE     reduce using rule 25 (INNER)
    DEFAULT  reduce using rule 25 (INNER)
    '}'      reduce using rule 25 (INNER)

    TYPE         go to state 58
    INNER        go to state 150
    VARNAME      go to state 109
    VARDEF       go to state 110
    MATH         go to state 111
    UNARY_EXP    go to state 112
    CONDITIONAL  go to state 113
    IFN          go to state 114
    SWITCHN      go to state 115
    FCALL        go to state 50
    LOOP         go to state 116
    FORN         go to state 117
    WHILEN       go to state 118
    DOWHILEN     go to state 119
    INPUT        go to state 120
    OUTPUT       go to state 121
    CONST        go to state 51


State 122

   14 STRUCT1: STRUCT IDENTIFIER '{' MVARDEF VARDEF ';' '}' ';' .

    $default  reduce using rule 14 (STRUCT1)


State 123

   96 MARGT: MARGT RMATH ',' .

    $default  reduce using rule 96 (MARGT)


State 124

   26 INNER: error INNER .

    $default  reduce using rule 26 (INNER)


State 125

  122 DOWHILEN: DO '{' . INNER '}' WHILE '(' COND ')' ';'
  123         | DO '{' . INNER '}' WHILE '(' error ')' ';'

    error            shift, and go to state 98
    '&'              shift, and go to state 17
    '*'              shift, and go to state 18
    IDENTIFIER       shift, and go to state 19
    BOOL             shift, and go to state 2
    INT              shift, and go to state 3
    FLOAT            shift, and go to state 4
    DOUBLE           shift, and go to state 5
    CHAR             shift, and go to state 6
    DO               shift, and go to state 99
    WHILE            shift, and go to state 100
    IF               shift, and go to state 101
    FALSE            shift, and go to state 37
    TRUE             shift, and go to state 38
    IN               shift, and go to state 102
    OUT              shift, and go to state 103
    VOID             shift, and go to state 7
    FOR              shift, and go to state 104
    INTCONST         shift, and go to state 39
    CHAR_CONSTANT    shift, and go to state 40
    RETURN           shift, and go to state 105
    STRUCT           shift, and go to state 57
    SWITCH           shift, and go to state 106
    INC_OP           shift, and go to state 41
    DEC_OP           shift, and go to state 42
    DOUBLE_CONSTANT  shift, and go to state 43
    ';'              shift, and go to state 107

    '}'  reduce using rule 25 (INNER)

    TYPE         go to state 58
    INNER        go to state 151
    VARNAME      go to state 109
    VARDEF       go to state 110
    MATH         go to state 111
    UNARY_EXP    go to state 112
    CONDITIONAL  go to state 113
    IFN          go to state 114
    SWITCHN      go to state 115
    FCALL        go to state 50
    LOOP         go to state 116
    FORN         go to state 117
    WHILEN       go to state 118
    DOWHILEN     go to state 119
    INPUT        go to state 120
    OUTPUT       go to state 121
    CONST        go to state 51


State 126

  120 WHILEN: WHILE '(' . COND ')' '{' INNER '}'
  121       | WHILE '(' . error ')' '{' INNER '}'

    error            shift, and go to state 152
    '&'              shift, and go to state 17
    '*'              shift, and go to state 18
    '('              shift, and go to state 36
    IDENTIFIER       shift, and go to state 19
    FALSE            shift, and go to state 37
    TRUE             shift, and go to state 38
    INTCONST         shift, and go to state 39
    CHAR_CONSTANT    shift, and go to state 40
    INC_OP           shift, and go to state 41
    DEC_OP           shift, and go to state 42
    DOUBLE_CONSTANT  shift, and go to state 43
    '!'              shift, and go to state 44

    VARNAME    go to state 45
    RMATH      go to state 153
    RADDSUB    go to state 47
    RMULTIDIV  go to state 48
    UNARY_EXP  go to state 49
    COND       go to state 154
    FCALL      go to state 50
    CONST      go to state 51


State 127

   67 IFN: IF '(' . COND ')' '{' INNER '}'
   68    | IF '(' . error ')' '{' INNER '}'
   69    | IF '(' . COND ')' '{' INNER '}' ELSEC
   70    | IF '(' . error ')' '{' INNER '}' ELSEC

    error            shift, and go to state 155
    '&'              shift, and go to state 17
    '*'              shift, and go to state 18
    '('              shift, and go to state 36
    IDENTIFIER       shift, and go to state 19
    FALSE            shift, and go to state 37
    TRUE             shift, and go to state 38
    INTCONST         shift, and go to state 39
    CHAR_CONSTANT    shift, and go to state 40
    INC_OP           shift, and go to state 41
    DEC_OP           shift, and go to state 42
    DOUBLE_CONSTANT  shift, and go to state 43
    '!'              shift, and go to state 44

    VARNAME    go to state 45
    RMATH      go to state 153
    RADDSUB    go to state 47
    RMULTIDIV  go to state 48
    UNARY_EXP  go to state 49
    COND       go to state 156
    FCALL      go to state 50
    CONST      go to state 51


State 128

  124 MIN: MIN . INP_OP VARNAME
  129 INPUT: IN MIN . INP_OP VARNAME ';'

    INP_OP  shift, and go to state 157


State 129

  126 MOUT: MOUT . OUT_OP VARNAME
  127     | MOUT . OUT_OP CONST
  130 OUTPUT: OUT MOUT . OUT_OP VARNAME ';'
  131       | OUT MOUT . OUT_OP CONST ';'

    OUT_OP  shift, and go to state 158


State 130

  118 FORN: FOR '(' . FL1 FL2 ';' FL3 ')' '{' INNER '}'
  119     | FOR '(' . error ')' '{' INNER '}'

    error            shift, and go to state 159
    '&'              shift, and go to state 17
    '*'              shift, and go to state 18
    IDENTIFIER       shift, and go to state 19
    FALSE            shift, and go to state 37
    TRUE             shift, and go to state 38
    INTCONST         shift, and go to state 39
    CHAR_CONSTANT    shift, and go to state 40
    INC_OP           shift, and go to state 41
    DEC_OP           shift, and go to state 42
    DOUBLE_CONSTANT  shift, and go to state 43
    ';'              shift, and go to state 107

    VARNAME    go to state 109
    MATH       go to state 160
    UNARY_EXP  go to state 112
    FCALL      go to state 50
    FL1        go to state 161
    CONST      go to state 51


State 131

   21 INNER: RETURN UNARY_EXP . ';'

    ';'  shift, and go to state 162


State 132

   85 SWITCHN: SWITCH '(' . COND ')' '{' SWITCHINNER '}'
   86        | SWITCH '(' . error ')' '{' SWITCHINNER '}'

    error            shift, and go to state 163
    '&'              shift, and go to state 17
    '*'              shift, and go to state 18
    '('              shift, and go to state 36
    IDENTIFIER       shift, and go to state 19
    FALSE            shift, and go to state 37
    TRUE             shift, and go to state 38
    INTCONST         shift, and go to state 39
    CHAR_CONSTANT    shift, and go to state 40
    INC_OP           shift, and go to state 41
    DEC_OP           shift, and go to state 42
    DOUBLE_CONSTANT  shift, and go to state 43
    '!'              shift, and go to state 44

    VARNAME    go to state 45
    RMATH      go to state 153
    RADDSUB    go to state 47
    RMULTIDIV  go to state 48
    UNARY_EXP  go to state 49
    COND       go to state 164
    FCALL      go to state 50
    CONST      go to state 51


State 133

   17 FUNCTION: TYPE VARNAME '(' FARG ')' '{' INNER '}' .

    $default  reduce using rule 17 (FUNCTION)


State 134

   44 MATH: VARNAME '=' . RMATH ';'

    '&'              shift, and go to state 17
    '*'              shift, and go to state 18
    '('              shift, and go to state 36
    IDENTIFIER       shift, and go to state 19
    FALSE            shift, and go to state 37
    TRUE             shift, and go to state 38
    INTCONST         shift, and go to state 39
    CHAR_CONSTANT    shift, and go to state 40
    INC_OP           shift, and go to state 41
    DEC_OP           shift, and go to state 42
    DOUBLE_CONSTANT  shift, and go to state 43
    '!'              shift, and go to state 44

    VARNAME    go to state 45
    RMATH      go to state 165
    RADDSUB    go to state 47
    RMULTIDIV  go to state 48
    UNARY_EXP  go to state 49
    FCALL      go to state 50
    CONST      go to state 51


State 135

  116 OPERATOR: '|' .

    $default  reduce using rule 116 (OPERATOR)


State 136

  115 OPERATOR: '^' .

    $default  reduce using rule 115 (OPERATOR)


State 137

  114 OPERATOR: '&' .

    $default  reduce using rule 114 (OPERATOR)


State 138

  110 OPERATOR: '+' .

    $default  reduce using rule 110 (OPERATOR)


State 139

  111 OPERATOR: '-' .

    $default  reduce using rule 111 (OPERATOR)


State 140

  112 OPERATOR: '*' .

    $default  reduce using rule 112 (OPERATOR)


State 141

  113 OPERATOR: '/' .

    $default  reduce using rule 113 (OPERATOR)


State 142

  117 OPERATOR: '%' .

    $default  reduce using rule 117 (OPERATOR)


State 143

   46 MATH: VARNAME OPERATOR . '=' RMATH ';'

    '='  shift, and go to state 166


State 144

   20 INNER: VARDEF INNER .

    $default  reduce using rule 20 (INNER)


State 145

   24 INNER: MATH INNER .

    $default  reduce using rule 24 (INNER)


State 146

   47 MATH: UNARY_EXP ';' .

    $default  reduce using rule 47 (MATH)


State 147

   19 INNER: CONDITIONAL INNER .

    $default  reduce using rule 19 (INNER)


State 148

   18 INNER: LOOP INNER .

    $default  reduce using rule 18 (INNER)


State 149

   22 INNER: INPUT INNER .

    $default  reduce using rule 22 (INNER)


State 150

   23 INNER: OUTPUT INNER .

    $default  reduce using rule 23 (INNER)


State 151

  122 DOWHILEN: DO '{' INNER . '}' WHILE '(' COND ')' ';'
  123         | DO '{' INNER . '}' WHILE '(' error ')' ';'

    '}'  shift, and go to state 167


State 152

  121 WHILEN: WHILE '(' error . ')' '{' INNER '}'

    ')'  shift, and go to state 168


State 153

   73 COND: RMATH .

    $default  reduce using rule 73 (COND)


State 154

   71 COND: COND . AND_OP COND
   72     | COND . OR_OP COND
   74     | COND . '>' COND
   75     | COND . '<' COND
   76     | COND . DOUBLE_EQ_OP COND
   77     | COND . NOT_EQ_OP COND
   78     | COND . LESS_EQ_OP COND
   79     | COND . GRE_EQ_OP COND
  120 WHILEN: WHILE '(' COND . ')' '{' INNER '}'

    OR_OP         shift, and go to state 169
    AND_OP        shift, and go to state 170
    DOUBLE_EQ_OP  shift, and go to state 171
    NOT_EQ_OP     shift, and go to state 172
    '<'           shift, and go to state 173
    '>'           shift, and go to state 174
    LESS_EQ_OP    shift, and go to state 175
    GRE_EQ_OP     shift, and go to state 176
    ')'           shift, and go to state 177


State 155

   68 IFN: IF '(' error . ')' '{' INNER '}'
   70    | IF '(' error . ')' '{' INNER '}' ELSEC

    ')'  shift, and go to state 178


State 156

   67 IFN: IF '(' COND . ')' '{' INNER '}'
   69    | IF '(' COND . ')' '{' INNER '}' ELSEC
   71 COND: COND . AND_OP COND
   72     | COND . OR_OP COND
   74     | COND . '>' COND
   75     | COND . '<' COND
   76     | COND . DOUBLE_EQ_OP COND
   77     | COND . NOT_EQ_OP COND
   78     | COND . LESS_EQ_OP COND
   79     | COND . GRE_EQ_OP COND

    OR_OP         shift, and go to state 169
    AND_OP        shift, and go to state 170
    DOUBLE_EQ_OP  shift, and go to state 171
    NOT_EQ_OP     shift, and go to state 172
    '<'           shift, and go to state 173
    '>'           shift, and go to state 174
    LESS_EQ_OP    shift, and go to state 175
    GRE_EQ_OP     shift, and go to state 176
    ')'           shift, and go to state 179


State 157

  124 MIN: MIN INP_OP . VARNAME
  129 INPUT: IN MIN INP_OP . VARNAME ';'

    '&'         shift, and go to state 17
    '*'         shift, and go to state 18
    IDENTIFIER  shift, and go to state 19

    VARNAME  go to state 180


State 158

  126 MOUT: MOUT OUT_OP . VARNAME
  127     | MOUT OUT_OP . CONST
  130 OUTPUT: OUT MOUT OUT_OP . VARNAME ';'
  131       | OUT MOUT OUT_OP . CONST ';'

    '&'              shift, and go to state 17
    '*'              shift, and go to state 18
    IDENTIFIER       shift, and go to state 19
    FALSE            shift, and go to state 37
    TRUE             shift, and go to state 38
    INTCONST         shift, and go to state 39
    CHAR_CONSTANT    shift, and go to state 40
    DOUBLE_CONSTANT  shift, and go to state 43

    VARNAME  go to state 181
    CONST    go to state 182


State 159

  119 FORN: FOR '(' error . ')' '{' INNER '}'

    ')'  shift, and go to state 183


State 160

  102 FL1: MATH .

    $default  reduce using rule 102 (FL1)


State 161

  118 FORN: FOR '(' FL1 . FL2 ';' FL3 ')' '{' INNER '}'

    '&'              shift, and go to state 17
    '*'              shift, and go to state 18
    '('              shift, and go to state 36
    IDENTIFIER       shift, and go to state 19
    FALSE            shift, and go to state 37
    TRUE             shift, and go to state 38
    INTCONST         shift, and go to state 39
    CHAR_CONSTANT    shift, and go to state 40
    INC_OP           shift, and go to state 41
    DEC_OP           shift, and go to state 42
    DOUBLE_CONSTANT  shift, and go to state 43
    '!'              shift, and go to state 44

    $default  reduce using rule 104 (FL2)

    VARNAME    go to state 45
    RMATH      go to state 153
    RADDSUB    go to state 47
    RMULTIDIV  go to state 48
    UNARY_EXP  go to state 49
    COND       go to state 184
    FCALL      go to state 50
    FL2        go to state 185
    CONST      go to state 51


State 162

   21 INNER: RETURN UNARY_EXP ';' .

    $default  reduce using rule 21 (INNER)


State 163

   86 SWITCHN: SWITCH '(' error . ')' '{' SWITCHINNER '}'

    ')'  shift, and go to state 186


State 164

   71 COND: COND . AND_OP COND
   72     | COND . OR_OP COND
   74     | COND . '>' COND
   75     | COND . '<' COND
   76     | COND . DOUBLE_EQ_OP COND
   77     | COND . NOT_EQ_OP COND
   78     | COND . LESS_EQ_OP COND
   79     | COND . GRE_EQ_OP COND
   85 SWITCHN: SWITCH '(' COND . ')' '{' SWITCHINNER '}'

    OR_OP         shift, and go to state 169
    AND_OP        shift, and go to state 170
    DOUBLE_EQ_OP  shift, and go to state 171
    NOT_EQ_OP     shift, and go to state 172
    '<'           shift, and go to state 173
    '>'           shift, and go to state 174
    LESS_EQ_OP    shift, and go to state 175
    GRE_EQ_OP     shift, and go to state 176
    ')'           shift, and go to state 187


State 165

   44 MATH: VARNAME '=' RMATH . ';'

    ';'  shift, and go to state 188


State 166

   46 MATH: VARNAME OPERATOR '=' . RMATH ';'

    '&'              shift, and go to state 17
    '*'              shift, and go to state 18
    '('              shift, and go to state 36
    IDENTIFIER       shift, and go to state 19
    FALSE            shift, and go to state 37
    TRUE             shift, and go to state 38
    INTCONST         shift, and go to state 39
    CHAR_CONSTANT    shift, and go to state 40
    INC_OP           shift, and go to state 41
    DEC_OP           shift, and go to state 42
    DOUBLE_CONSTANT  shift, and go to state 43
    '!'              shift, and go to state 44

    VARNAME    go to state 45
    RMATH      go to state 189
    RADDSUB    go to state 47
    RMULTIDIV  go to state 48
    UNARY_EXP  go to state 49
    FCALL      go to state 50
    CONST      go to state 51


State 167

  122 DOWHILEN: DO '{' INNER '}' . WHILE '(' COND ')' ';'
  123         | DO '{' INNER '}' . WHILE '(' error ')' ';'

    WHILE  shift, and go to state 190


State 168

  121 WHILEN: WHILE '(' error ')' . '{' INNER '}'

    '{'  shift, and go to state 191


State 169

   72 COND: COND OR_OP . COND

    '&'              shift, and go to state 17
    '*'              shift, and go to state 18
    '('              shift, and go to state 36
    IDENTIFIER       shift, and go to state 19
    FALSE            shift, and go to state 37
    TRUE             shift, and go to state 38
    INTCONST         shift, and go to state 39
    CHAR_CONSTANT    shift, and go to state 40
    INC_OP           shift, and go to state 41
    DEC_OP           shift, and go to state 42
    DOUBLE_CONSTANT  shift, and go to state 43
    '!'              shift, and go to state 44

    VARNAME    go to state 45
    RMATH      go to state 153
    RADDSUB    go to state 47
    RMULTIDIV  go to state 48
    UNARY_EXP  go to state 49
    COND       go to state 192
    FCALL      go to state 50
    CONST      go to state 51


State 170

   71 COND: COND AND_OP . COND

    '&'              shift, and go to state 17
    '*'              shift, and go to state 18
    '('              shift, and go to state 36
    IDENTIFIER       shift, and go to state 19
    FALSE            shift, and go to state 37
    TRUE             shift, and go to state 38
    INTCONST         shift, and go to state 39
    CHAR_CONSTANT    shift, and go to state 40
    INC_OP           shift, and go to state 41
    DEC_OP           shift, and go to state 42
    DOUBLE_CONSTANT  shift, and go to state 43
    '!'              shift, and go to state 44

    VARNAME    go to state 45
    RMATH      go to state 153
    RADDSUB    go to state 47
    RMULTIDIV  go to state 48
    UNARY_EXP  go to state 49
    COND       go to state 193
    FCALL      go to state 50
    CONST      go to state 51


State 171

   76 COND: COND DOUBLE_EQ_OP . COND

    '&'              shift, and go to state 17
    '*'              shift, and go to state 18
    '('              shift, and go to state 36
    IDENTIFIER       shift, and go to state 19
    FALSE            shift, and go to state 37
    TRUE             shift, and go to state 38
    INTCONST         shift, and go to state 39
    CHAR_CONSTANT    shift, and go to state 40
    INC_OP           shift, and go to state 41
    DEC_OP           shift, and go to state 42
    DOUBLE_CONSTANT  shift, and go to state 43
    '!'              shift, and go to state 44

    VARNAME    go to state 45
    RMATH      go to state 153
    RADDSUB    go to state 47
    RMULTIDIV  go to state 48
    UNARY_EXP  go to state 49
    COND       go to state 194
    FCALL      go to state 50
    CONST      go to state 51


State 172

   77 COND: COND NOT_EQ_OP . COND

    '&'              shift, and go to state 17
    '*'              shift, and go to state 18
    '('              shift, and go to state 36
    IDENTIFIER       shift, and go to state 19
    FALSE            shift, and go to state 37
    TRUE             shift, and go to state 38
    INTCONST         shift, and go to state 39
    CHAR_CONSTANT    shift, and go to state 40
    INC_OP           shift, and go to state 41
    DEC_OP           shift, and go to state 42
    DOUBLE_CONSTANT  shift, and go to state 43
    '!'              shift, and go to state 44

    VARNAME    go to state 45
    RMATH      go to state 153
    RADDSUB    go to state 47
    RMULTIDIV  go to state 48
    UNARY_EXP  go to state 49
    COND       go to state 195
    FCALL      go to state 50
    CONST      go to state 51


State 173

   75 COND: COND '<' . COND

    '&'              shift, and go to state 17
    '*'              shift, and go to state 18
    '('              shift, and go to state 36
    IDENTIFIER       shift, and go to state 19
    FALSE            shift, and go to state 37
    TRUE             shift, and go to state 38
    INTCONST         shift, and go to state 39
    CHAR_CONSTANT    shift, and go to state 40
    INC_OP           shift, and go to state 41
    DEC_OP           shift, and go to state 42
    DOUBLE_CONSTANT  shift, and go to state 43
    '!'              shift, and go to state 44

    VARNAME    go to state 45
    RMATH      go to state 153
    RADDSUB    go to state 47
    RMULTIDIV  go to state 48
    UNARY_EXP  go to state 49
    COND       go to state 196
    FCALL      go to state 50
    CONST      go to state 51


State 174

   74 COND: COND '>' . COND

    '&'              shift, and go to state 17
    '*'              shift, and go to state 18
    '('              shift, and go to state 36
    IDENTIFIER       shift, and go to state 19
    FALSE            shift, and go to state 37
    TRUE             shift, and go to state 38
    INTCONST         shift, and go to state 39
    CHAR_CONSTANT    shift, and go to state 40
    INC_OP           shift, and go to state 41
    DEC_OP           shift, and go to state 42
    DOUBLE_CONSTANT  shift, and go to state 43
    '!'              shift, and go to state 44

    VARNAME    go to state 45
    RMATH      go to state 153
    RADDSUB    go to state 47
    RMULTIDIV  go to state 48
    UNARY_EXP  go to state 49
    COND       go to state 197
    FCALL      go to state 50
    CONST      go to state 51


State 175

   78 COND: COND LESS_EQ_OP . COND

    '&'              shift, and go to state 17
    '*'              shift, and go to state 18
    '('              shift, and go to state 36
    IDENTIFIER       shift, and go to state 19
    FALSE            shift, and go to state 37
    TRUE             shift, and go to state 38
    INTCONST         shift, and go to state 39
    CHAR_CONSTANT    shift, and go to state 40
    INC_OP           shift, and go to state 41
    DEC_OP           shift, and go to state 42
    DOUBLE_CONSTANT  shift, and go to state 43
    '!'              shift, and go to state 44

    VARNAME    go to state 45
    RMATH      go to state 153
    RADDSUB    go to state 47
    RMULTIDIV  go to state 48
    UNARY_EXP  go to state 49
    COND       go to state 198
    FCALL      go to state 50
    CONST      go to state 51


State 176

   79 COND: COND GRE_EQ_OP . COND

    '&'              shift, and go to state 17
    '*'              shift, and go to state 18
    '('              shift, and go to state 36
    IDENTIFIER       shift, and go to state 19
    FALSE            shift, and go to state 37
    TRUE             shift, and go to state 38
    INTCONST         shift, and go to state 39
    CHAR_CONSTANT    shift, and go to state 40
    INC_OP           shift, and go to state 41
    DEC_OP           shift, and go to state 42
    DOUBLE_CONSTANT  shift, and go to state 43
    '!'              shift, and go to state 44

    VARNAME    go to state 45
    RMATH      go to state 153
    RADDSUB    go to state 47
    RMULTIDIV  go to state 48
    UNARY_EXP  go to state 49
    COND       go to state 199
    FCALL      go to state 50
    CONST      go to state 51


State 177

  120 WHILEN: WHILE '(' COND ')' . '{' INNER '}'

    '{'  shift, and go to state 200


State 178

   68 IFN: IF '(' error ')' . '{' INNER '}'
   70    | IF '(' error ')' . '{' INNER '}' ELSEC

    '{'  shift, and go to state 201


State 179

   67 IFN: IF '(' COND ')' . '{' INNER '}'
   69    | IF '(' COND ')' . '{' INNER '}' ELSEC

    '{'  shift, and go to state 202


State 180

  124 MIN: MIN INP_OP VARNAME .
  129 INPUT: IN MIN INP_OP VARNAME . ';'

    ';'  shift, and go to state 203

    $default  reduce using rule 124 (MIN)


State 181

  126 MOUT: MOUT OUT_OP VARNAME .
  130 OUTPUT: OUT MOUT OUT_OP VARNAME . ';'

    ';'  shift, and go to state 204

    $default  reduce using rule 126 (MOUT)


State 182

  127 MOUT: MOUT OUT_OP CONST .
  131 OUTPUT: OUT MOUT OUT_OP CONST . ';'

    ';'  shift, and go to state 205

    $default  reduce using rule 127 (MOUT)


State 183

  119 FORN: FOR '(' error ')' . '{' INNER '}'

    '{'  shift, and go to state 206


State 184

   71 COND: COND . AND_OP COND
   72     | COND . OR_OP COND
   74     | COND . '>' COND
   75     | COND . '<' COND
   76     | COND . DOUBLE_EQ_OP COND
   77     | COND . NOT_EQ_OP COND
   78     | COND . LESS_EQ_OP COND
   79     | COND . GRE_EQ_OP COND
  103 FL2: COND .

    OR_OP         shift, and go to state 169
    AND_OP        shift, and go to state 170
    DOUBLE_EQ_OP  shift, and go to state 171
    NOT_EQ_OP     shift, and go to state 172
    '<'           shift, and go to state 173
    '>'           shift, and go to state 174
    LESS_EQ_OP    shift, and go to state 175
    GRE_EQ_OP     shift, and go to state 176

    $default  reduce using rule 103 (FL2)


State 185

  118 FORN: FOR '(' FL1 FL2 . ';' FL3 ')' '{' INNER '}'

    ';'  shift, and go to state 207


State 186

   86 SWITCHN: SWITCH '(' error ')' . '{' SWITCHINNER '}'

    '{'  shift, and go to state 208


State 187

   85 SWITCHN: SWITCH '(' COND ')' . '{' SWITCHINNER '}'

    '{'  shift, and go to state 209


State 188

   44 MATH: VARNAME '=' RMATH ';' .

    $default  reduce using rule 44 (MATH)


State 189

   46 MATH: VARNAME OPERATOR '=' RMATH . ';'

    ';'  shift, and go to state 210


State 190

  122 DOWHILEN: DO '{' INNER '}' WHILE . '(' COND ')' ';'
  123         | DO '{' INNER '}' WHILE . '(' error ')' ';'

    '('  shift, and go to state 211


State 191

  121 WHILEN: WHILE '(' error ')' '{' . INNER '}'

    error            shift, and go to state 98
    '&'              shift, and go to state 17
    '*'              shift, and go to state 18
    IDENTIFIER       shift, and go to state 19
    BOOL             shift, and go to state 2
    INT              shift, and go to state 3
    FLOAT            shift, and go to state 4
    DOUBLE           shift, and go to state 5
    CHAR             shift, and go to state 6
    DO               shift, and go to state 99
    WHILE            shift, and go to state 100
    IF               shift, and go to state 101
    FALSE            shift, and go to state 37
    TRUE             shift, and go to state 38
    IN               shift, and go to state 102
    OUT              shift, and go to state 103
    VOID             shift, and go to state 7
    FOR              shift, and go to state 104
    INTCONST         shift, and go to state 39
    CHAR_CONSTANT    shift, and go to state 40
    RETURN           shift, and go to state 105
    STRUCT           shift, and go to state 57
    SWITCH           shift, and go to state 106
    INC_OP           shift, and go to state 41
    DEC_OP           shift, and go to state 42
    DOUBLE_CONSTANT  shift, and go to state 43
    ';'              shift, and go to state 107

    '}'  reduce using rule 25 (INNER)

    TYPE         go to state 58
    INNER        go to state 212
    VARNAME      go to state 109
    VARDEF       go to state 110
    MATH         go to state 111
    UNARY_EXP    go to state 112
    CONDITIONAL  go to state 113
    IFN          go to state 114
    SWITCHN      go to state 115
    FCALL        go to state 50
    LOOP         go to state 116
    FORN         go to state 117
    WHILEN       go to state 118
    DOWHILEN     go to state 119
    INPUT        go to state 120
    OUTPUT       go to state 121
    CONST        go to state 51


State 192

   71 COND: COND . AND_OP COND
   72     | COND . OR_OP COND
   72     | COND OR_OP COND .
   74     | COND . '>' COND
   75     | COND . '<' COND
   76     | COND . DOUBLE_EQ_OP COND
   77     | COND . NOT_EQ_OP COND
   78     | COND . LESS_EQ_OP COND
   79     | COND . GRE_EQ_OP COND

    AND_OP        shift, and go to state 170
    DOUBLE_EQ_OP  shift, and go to state 171
    NOT_EQ_OP     shift, and go to state 172
    '<'           shift, and go to state 173
    '>'           shift, and go to state 174
    LESS_EQ_OP    shift, and go to state 175
    GRE_EQ_OP     shift, and go to state 176

    $default  reduce using rule 72 (COND)


State 193

   71 COND: COND . AND_OP COND
   71     | COND AND_OP COND .
   72     | COND . OR_OP COND
   74     | COND . '>' COND
   75     | COND . '<' COND
   76     | COND . DOUBLE_EQ_OP COND
   77     | COND . NOT_EQ_OP COND
   78     | COND . LESS_EQ_OP COND
   79     | COND . GRE_EQ_OP COND

    DOUBLE_EQ_OP  shift, and go to state 171
    NOT_EQ_OP     shift, and go to state 172
    '<'           shift, and go to state 173
    '>'           shift, and go to state 174
    LESS_EQ_OP    shift, and go to state 175
    GRE_EQ_OP     shift, and go to state 176

    $default  reduce using rule 71 (COND)


State 194

   71 COND: COND . AND_OP COND
   72     | COND . OR_OP COND
   74     | COND . '>' COND
   75     | COND . '<' COND
   76     | COND . DOUBLE_EQ_OP COND
   76     | COND DOUBLE_EQ_OP COND .
   77     | COND . NOT_EQ_OP COND
   78     | COND . LESS_EQ_OP COND
   79     | COND . GRE_EQ_OP COND

    '<'         shift, and go to state 173
    '>'         shift, and go to state 174
    LESS_EQ_OP  shift, and go to state 175
    GRE_EQ_OP   shift, and go to state 176

    $default  reduce using rule 76 (COND)


State 195

   71 COND: COND . AND_OP COND
   72     | COND . OR_OP COND
   74     | COND . '>' COND
   75     | COND . '<' COND
   76     | COND . DOUBLE_EQ_OP COND
   77     | COND . NOT_EQ_OP COND
   77     | COND NOT_EQ_OP COND .
   78     | COND . LESS_EQ_OP COND
   79     | COND . GRE_EQ_OP COND

    '<'         shift, and go to state 173
    '>'         shift, and go to state 174
    LESS_EQ_OP  shift, and go to state 175
    GRE_EQ_OP   shift, and go to state 176

    $default  reduce using rule 77 (COND)


State 196

   71 COND: COND . AND_OP COND
   72     | COND . OR_OP COND
   74     | COND . '>' COND
   75     | COND . '<' COND
   75     | COND '<' COND .
   76     | COND . DOUBLE_EQ_OP COND
   77     | COND . NOT_EQ_OP COND
   78     | COND . LESS_EQ_OP COND
   79     | COND . GRE_EQ_OP COND

    $default  reduce using rule 75 (COND)


State 197

   71 COND: COND . AND_OP COND
   72     | COND . OR_OP COND
   74     | COND . '>' COND
   74     | COND '>' COND .
   75     | COND . '<' COND
   76     | COND . DOUBLE_EQ_OP COND
   77     | COND . NOT_EQ_OP COND
   78     | COND . LESS_EQ_OP COND
   79     | COND . GRE_EQ_OP COND

    $default  reduce using rule 74 (COND)


State 198

   71 COND: COND . AND_OP COND
   72     | COND . OR_OP COND
   74     | COND . '>' COND
   75     | COND . '<' COND
   76     | COND . DOUBLE_EQ_OP COND
   77     | COND . NOT_EQ_OP COND
   78     | COND . LESS_EQ_OP COND
   78     | COND LESS_EQ_OP COND .
   79     | COND . GRE_EQ_OP COND

    $default  reduce using rule 78 (COND)


State 199

   71 COND: COND . AND_OP COND
   72     | COND . OR_OP COND
   74     | COND . '>' COND
   75     | COND . '<' COND
   76     | COND . DOUBLE_EQ_OP COND
   77     | COND . NOT_EQ_OP COND
   78     | COND . LESS_EQ_OP COND
   79     | COND . GRE_EQ_OP COND
   79     | COND GRE_EQ_OP COND .

    $default  reduce using rule 79 (COND)


State 200

  120 WHILEN: WHILE '(' COND ')' '{' . INNER '}'

    error            shift, and go to state 98
    '&'              shift, and go to state 17
    '*'              shift, and go to state 18
    IDENTIFIER       shift, and go to state 19
    BOOL             shift, and go to state 2
    INT              shift, and go to state 3
    FLOAT            shift, and go to state 4
    DOUBLE           shift, and go to state 5
    CHAR             shift, and go to state 6
    DO               shift, and go to state 99
    WHILE            shift, and go to state 100
    IF               shift, and go to state 101
    FALSE            shift, and go to state 37
    TRUE             shift, and go to state 38
    IN               shift, and go to state 102
    OUT              shift, and go to state 103
    VOID             shift, and go to state 7
    FOR              shift, and go to state 104
    INTCONST         shift, and go to state 39
    CHAR_CONSTANT    shift, and go to state 40
    RETURN           shift, and go to state 105
    STRUCT           shift, and go to state 57
    SWITCH           shift, and go to state 106
    INC_OP           shift, and go to state 41
    DEC_OP           shift, and go to state 42
    DOUBLE_CONSTANT  shift, and go to state 43
    ';'              shift, and go to state 107

    '}'  reduce using rule 25 (INNER)

    TYPE         go to state 58
    INNER        go to state 213
    VARNAME      go to state 109
    VARDEF       go to state 110
    MATH         go to state 111
    UNARY_EXP    go to state 112
    CONDITIONAL  go to state 113
    IFN          go to state 114
    SWITCHN      go to state 115
    FCALL        go to state 50
    LOOP         go to state 116
    FORN         go to state 117
    WHILEN       go to state 118
    DOWHILEN     go to state 119
    INPUT        go to state 120
    OUTPUT       go to state 121
    CONST        go to state 51


State 201

   68 IFN: IF '(' error ')' '{' . INNER '}'
   70    | IF '(' error ')' '{' . INNER '}' ELSEC

    error            shift, and go to state 98
    '&'              shift, and go to state 17
    '*'              shift, and go to state 18
    IDENTIFIER       shift, and go to state 19
    BOOL             shift, and go to state 2
    INT              shift, and go to state 3
    FLOAT            shift, and go to state 4
    DOUBLE           shift, and go to state 5
    CHAR             shift, and go to state 6
    DO               shift, and go to state 99
    WHILE            shift, and go to state 100
    IF               shift, and go to state 101
    FALSE            shift, and go to state 37
    TRUE             shift, and go to state 38
    IN               shift, and go to state 102
    OUT              shift, and go to state 103
    VOID             shift, and go to state 7
    FOR              shift, and go to state 104
    INTCONST         shift, and go to state 39
    CHAR_CONSTANT    shift, and go to state 40
    RETURN           shift, and go to state 105
    STRUCT           shift, and go to state 57
    SWITCH           shift, and go to state 106
    INC_OP           shift, and go to state 41
    DEC_OP           shift, and go to state 42
    DOUBLE_CONSTANT  shift, and go to state 43
    ';'              shift, and go to state 107

    '}'  reduce using rule 25 (INNER)

    TYPE         go to state 58
    INNER        go to state 214
    VARNAME      go to state 109
    VARDEF       go to state 110
    MATH         go to state 111
    UNARY_EXP    go to state 112
    CONDITIONAL  go to state 113
    IFN          go to state 114
    SWITCHN      go to state 115
    FCALL        go to state 50
    LOOP         go to state 116
    FORN         go to state 117
    WHILEN       go to state 118
    DOWHILEN     go to state 119
    INPUT        go to state 120
    OUTPUT       go to state 121
    CONST        go to state 51


State 202

   67 IFN: IF '(' COND ')' '{' . INNER '}'
   69    | IF '(' COND ')' '{' . INNER '}' ELSEC

    error            shift, and go to state 98
    '&'              shift, and go to state 17
    '*'              shift, and go to state 18
    IDENTIFIER       shift, and go to state 19
    BOOL             shift, and go to state 2
    INT              shift, and go to state 3
    FLOAT            shift, and go to state 4
    DOUBLE           shift, and go to state 5
    CHAR             shift, and go to state 6
    DO               shift, and go to state 99
    WHILE            shift, and go to state 100
    IF               shift, and go to state 101
    FALSE            shift, and go to state 37
    TRUE             shift, and go to state 38
    IN               shift, and go to state 102
    OUT              shift, and go to state 103
    VOID             shift, and go to state 7
    FOR              shift, and go to state 104
    INTCONST         shift, and go to state 39
    CHAR_CONSTANT    shift, and go to state 40
    RETURN           shift, and go to state 105
    STRUCT           shift, and go to state 57
    SWITCH           shift, and go to state 106
    INC_OP           shift, and go to state 41
    DEC_OP           shift, and go to state 42
    DOUBLE_CONSTANT  shift, and go to state 43
    ';'              shift, and go to state 107

    '}'  reduce using rule 25 (INNER)

    TYPE         go to state 58
    INNER        go to state 215
    VARNAME      go to state 109
    VARDEF       go to state 110
    MATH         go to state 111
    UNARY_EXP    go to state 112
    CONDITIONAL  go to state 113
    IFN          go to state 114
    SWITCHN      go to state 115
    FCALL        go to state 50
    LOOP         go to state 116
    FORN         go to state 117
    WHILEN       go to state 118
    DOWHILEN     go to state 119
    INPUT        go to state 120
    OUTPUT       go to state 121
    CONST        go to state 51


State 203

  129 INPUT: IN MIN INP_OP VARNAME ';' .

    $default  reduce using rule 129 (INPUT)


State 204

  130 OUTPUT: OUT MOUT OUT_OP VARNAME ';' .

    $default  reduce using rule 130 (OUTPUT)


State 205

  131 OUTPUT: OUT MOUT OUT_OP CONST ';' .

    $default  reduce using rule 131 (OUTPUT)


State 206

  119 FORN: FOR '(' error ')' '{' . INNER '}'

    error            shift, and go to state 98
    '&'              shift, and go to state 17
    '*'              shift, and go to state 18
    IDENTIFIER       shift, and go to state 19
    BOOL             shift, and go to state 2
    INT              shift, and go to state 3
    FLOAT            shift, and go to state 4
    DOUBLE           shift, and go to state 5
    CHAR             shift, and go to state 6
    DO               shift, and go to state 99
    WHILE            shift, and go to state 100
    IF               shift, and go to state 101
    FALSE            shift, and go to state 37
    TRUE             shift, and go to state 38
    IN               shift, and go to state 102
    OUT              shift, and go to state 103
    VOID             shift, and go to state 7
    FOR              shift, and go to state 104
    INTCONST         shift, and go to state 39
    CHAR_CONSTANT    shift, and go to state 40
    RETURN           shift, and go to state 105
    STRUCT           shift, and go to state 57
    SWITCH           shift, and go to state 106
    INC_OP           shift, and go to state 41
    DEC_OP           shift, and go to state 42
    DOUBLE_CONSTANT  shift, and go to state 43
    ';'              shift, and go to state 107

    '}'  reduce using rule 25 (INNER)

    TYPE         go to state 58
    INNER        go to state 216
    VARNAME      go to state 109
    VARDEF       go to state 110
    MATH         go to state 111
    UNARY_EXP    go to state 112
    CONDITIONAL  go to state 113
    IFN          go to state 114
    SWITCHN      go to state 115
    FCALL        go to state 50
    LOOP         go to state 116
    FORN         go to state 117
    WHILEN       go to state 118
    DOWHILEN     go to state 119
    INPUT        go to state 120
    OUTPUT       go to state 121
    CONST        go to state 51


State 207

  118 FORN: FOR '(' FL1 FL2 ';' . FL3 ')' '{' INNER '}'

    '&'              shift, and go to state 17
    '*'              shift, and go to state 18
    IDENTIFIER       shift, and go to state 19
    BOOL             shift, and go to state 2
    INT              shift, and go to state 3
    FLOAT            shift, and go to state 4
    DOUBLE           shift, and go to state 5
    CHAR             shift, and go to state 6
    FALSE            shift, and go to state 37
    TRUE             shift, and go to state 38
    VOID             shift, and go to state 7
    INTCONST         shift, and go to state 39
    CHAR_CONSTANT    shift, and go to state 40
    STRUCT           shift, and go to state 57
    INC_OP           shift, and go to state 41
    DEC_OP           shift, and go to state 42
    DOUBLE_CONSTANT  shift, and go to state 43

    $default  reduce using rule 109 (FL3)

    TYPE       go to state 217
    VARNAME    go to state 218
    UNARY_EXP  go to state 219
    FCALL      go to state 50
    FL3        go to state 220
    CONST      go to state 51


State 208

   86 SWITCHN: SWITCH '(' error ')' '{' . SWITCHINNER '}'

    CASE     shift, and go to state 221
    DEFAULT  shift, and go to state 222

    $default  reduce using rule 91 (SWITCHINNER)

    SWITCHINNER  go to state 223


State 209

   85 SWITCHN: SWITCH '(' COND ')' '{' . SWITCHINNER '}'

    CASE     shift, and go to state 221
    DEFAULT  shift, and go to state 222

    $default  reduce using rule 91 (SWITCHINNER)

    SWITCHINNER  go to state 224


State 210

   46 MATH: VARNAME OPERATOR '=' RMATH ';' .

    $default  reduce using rule 46 (MATH)


State 211

  122 DOWHILEN: DO '{' INNER '}' WHILE '(' . COND ')' ';'
  123         | DO '{' INNER '}' WHILE '(' . error ')' ';'

    error            shift, and go to state 225
    '&'              shift, and go to state 17
    '*'              shift, and go to state 18
    '('              shift, and go to state 36
    IDENTIFIER       shift, and go to state 19
    FALSE            shift, and go to state 37
    TRUE             shift, and go to state 38
    INTCONST         shift, and go to state 39
    CHAR_CONSTANT    shift, and go to state 40
    INC_OP           shift, and go to state 41
    DEC_OP           shift, and go to state 42
    DOUBLE_CONSTANT  shift, and go to state 43
    '!'              shift, and go to state 44

    VARNAME    go to state 45
    RMATH      go to state 153
    RADDSUB    go to state 47
    RMULTIDIV  go to state 48
    UNARY_EXP  go to state 49
    COND       go to state 226
    FCALL      go to state 50
    CONST      go to state 51


State 212

  121 WHILEN: WHILE '(' error ')' '{' INNER . '}'

    '}'  shift, and go to state 227


State 213

  120 WHILEN: WHILE '(' COND ')' '{' INNER . '}'

    '}'  shift, and go to state 228


State 214

   68 IFN: IF '(' error ')' '{' INNER . '}'
   70    | IF '(' error ')' '{' INNER . '}' ELSEC

    '}'  shift, and go to state 229


State 215

   67 IFN: IF '(' COND ')' '{' INNER . '}'
   69    | IF '(' COND ')' '{' INNER . '}' ELSEC

    '}'  shift, and go to state 230


State 216

  119 FORN: FOR '(' error ')' '{' INNER . '}'

    '}'  shift, and go to state 231


State 217

  106 FL3: TYPE . VARNAME '=' RMATH

    '&'         shift, and go to state 17
    '*'         shift, and go to state 18
    IDENTIFIER  shift, and go to state 19

    VARNAME  go to state 232


State 218

   58 UNARY_EXP: VARNAME . INC_OP
   60          | VARNAME . DEC_OP
   64          | VARNAME .
   98 FCALL: VARNAME . '(' ARGT ')'
  105 FL3: VARNAME . '=' RMATH
  107    | VARNAME . OPERATOR '=' RMATH

    '='     shift, and go to state 233
    '|'     shift, and go to state 135
    '^'     shift, and go to state 136
    '&'     shift, and go to state 137
    '+'     shift, and go to state 138
    '-'     shift, and go to state 139
    '*'     shift, and go to state 140
    '/'     shift, and go to state 141
    '%'     shift, and go to state 142
    '('     shift, and go to state 65
    INC_OP  shift, and go to state 66
    DEC_OP  shift, and go to state 67

    $default  reduce using rule 64 (UNARY_EXP)

    OPERATOR  go to state 234


State 219

  108 FL3: UNARY_EXP .

    $default  reduce using rule 108 (FL3)


State 220

  118 FORN: FOR '(' FL1 FL2 ';' FL3 . ')' '{' INNER '}'

    ')'  shift, and go to state 235


State 221

   87 SWITCHINNER: CASE . CONST ':' '{' INNER '}' SWITCHINNER
   88            | CASE . CONST ':' INNER SWITCHINNER

    FALSE            shift, and go to state 37
    TRUE             shift, and go to state 38
    INTCONST         shift, and go to state 39
    CHAR_CONSTANT    shift, and go to state 40
    DOUBLE_CONSTANT  shift, and go to state 43

    CONST  go to state 236


State 222

   89 SWITCHINNER: DEFAULT . ':' '{' INNER '}' WODEFAULT
   90            | DEFAULT . ':' INNER WODEFAULT

    ':'  shift, and go to state 237


State 223

   86 SWITCHN: SWITCH '(' error ')' '{' SWITCHINNER . '}'

    '}'  shift, and go to state 238


State 224

   85 SWITCHN: SWITCH '(' COND ')' '{' SWITCHINNER . '}'

    '}'  shift, and go to state 239


State 225

  123 DOWHILEN: DO '{' INNER '}' WHILE '(' error . ')' ';'

    ')'  shift, and go to state 240


State 226

   71 COND: COND . AND_OP COND
   72     | COND . OR_OP COND
   74     | COND . '>' COND
   75     | COND . '<' COND
   76     | COND . DOUBLE_EQ_OP COND
   77     | COND . NOT_EQ_OP COND
   78     | COND . LESS_EQ_OP COND
   79     | COND . GRE_EQ_OP COND
  122 DOWHILEN: DO '{' INNER '}' WHILE '(' COND . ')' ';'

    OR_OP         shift, and go to state 169
    AND_OP        shift, and go to state 170
    DOUBLE_EQ_OP  shift, and go to state 171
    NOT_EQ_OP     shift, and go to state 172
    '<'           shift, and go to state 173
    '>'           shift, and go to state 174
    LESS_EQ_OP    shift, and go to state 175
    GRE_EQ_OP     shift, and go to state 176
    ')'           shift, and go to state 241


State 227

  121 WHILEN: WHILE '(' error ')' '{' INNER '}' .

    $default  reduce using rule 121 (WHILEN)


State 228

  120 WHILEN: WHILE '(' COND ')' '{' INNER '}' .

    $default  reduce using rule 120 (WHILEN)


State 229

   68 IFN: IF '(' error ')' '{' INNER '}' .
   70    | IF '(' error ')' '{' INNER '}' . ELSEC

    ELIF  shift, and go to state 242
    ELSE  shift, and go to state 243

    $default  reduce using rule 68 (IFN)

    ELSEC  go to state 244


State 230

   67 IFN: IF '(' COND ')' '{' INNER '}' .
   69    | IF '(' COND ')' '{' INNER '}' . ELSEC

    ELIF  shift, and go to state 242
    ELSE  shift, and go to state 243

    $default  reduce using rule 67 (IFN)

    ELSEC  go to state 245


State 231

  119 FORN: FOR '(' error ')' '{' INNER '}' .

    $default  reduce using rule 119 (FORN)


State 232

  106 FL3: TYPE VARNAME . '=' RMATH

    '='  shift, and go to state 246


State 233

  105 FL3: VARNAME '=' . RMATH

    '&'              shift, and go to state 17
    '*'              shift, and go to state 18
    '('              shift, and go to state 36
    IDENTIFIER       shift, and go to state 19
    FALSE            shift, and go to state 37
    TRUE             shift, and go to state 38
    INTCONST         shift, and go to state 39
    CHAR_CONSTANT    shift, and go to state 40
    INC_OP           shift, and go to state 41
    DEC_OP           shift, and go to state 42
    DOUBLE_CONSTANT  shift, and go to state 43
    '!'              shift, and go to state 44

    VARNAME    go to state 45
    RMATH      go to state 247
    RADDSUB    go to state 47
    RMULTIDIV  go to state 48
    UNARY_EXP  go to state 49
    FCALL      go to state 50
    CONST      go to state 51


State 234

  107 FL3: VARNAME OPERATOR . '=' RMATH

    '='  shift, and go to state 248


State 235

  118 FORN: FOR '(' FL1 FL2 ';' FL3 ')' . '{' INNER '}'

    '{'  shift, and go to state 249


State 236

   87 SWITCHINNER: CASE CONST . ':' '{' INNER '}' SWITCHINNER
   88            | CASE CONST . ':' INNER SWITCHINNER

    ':'  shift, and go to state 250


State 237

   89 SWITCHINNER: DEFAULT ':' . '{' INNER '}' WODEFAULT
   90            | DEFAULT ':' . INNER WODEFAULT

    error            shift, and go to state 98
    '&'              shift, and go to state 17
    '*'              shift, and go to state 18
    IDENTIFIER       shift, and go to state 19
    BOOL             shift, and go to state 2
    INT              shift, and go to state 3
    FLOAT            shift, and go to state 4
    DOUBLE           shift, and go to state 5
    CHAR             shift, and go to state 6
    DO               shift, and go to state 99
    WHILE            shift, and go to state 100
    IF               shift, and go to state 101
    FALSE            shift, and go to state 37
    TRUE             shift, and go to state 38
    IN               shift, and go to state 102
    OUT              shift, and go to state 103
    VOID             shift, and go to state 7
    FOR              shift, and go to state 104
    INTCONST         shift, and go to state 39
    CHAR_CONSTANT    shift, and go to state 40
    RETURN           shift, and go to state 105
    STRUCT           shift, and go to state 57
    SWITCH           shift, and go to state 106
    INC_OP           shift, and go to state 41
    DEC_OP           shift, and go to state 42
    DOUBLE_CONSTANT  shift, and go to state 43
    '{'              shift, and go to state 251
    ';'              shift, and go to state 107

    CASE  reduce using rule 25 (INNER)
    '}'   reduce using rule 25 (INNER)

    TYPE         go to state 58
    INNER        go to state 252
    VARNAME      go to state 109
    VARDEF       go to state 110
    MATH         go to state 111
    UNARY_EXP    go to state 112
    CONDITIONAL  go to state 113
    IFN          go to state 114
    SWITCHN      go to state 115
    FCALL        go to state 50
    LOOP         go to state 116
    FORN         go to state 117
    WHILEN       go to state 118
    DOWHILEN     go to state 119
    INPUT        go to state 120
    OUTPUT       go to state 121
    CONST        go to state 51


State 238

   86 SWITCHN: SWITCH '(' error ')' '{' SWITCHINNER '}' .

    $default  reduce using rule 86 (SWITCHN)


State 239

   85 SWITCHN: SWITCH '(' COND ')' '{' SWITCHINNER '}' .

    $default  reduce using rule 85 (SWITCHN)


State 240

  123 DOWHILEN: DO '{' INNER '}' WHILE '(' error ')' . ';'

    ';'  shift, and go to state 253


State 241

  122 DOWHILEN: DO '{' INNER '}' WHILE '(' COND ')' . ';'

    ';'  shift, and go to state 254


State 242

   80 ELSEC: ELIF . '(' COND ')' '{' INNER '}' ELSEC
   82      | ELIF . '(' COND ')' '{' INNER '}'
   83      | ELIF . '(' error ')' '{' INNER '}'
   84      | ELIF . '(' error ')' '{' INNER '}' ELSEC

    '('  shift, and go to state 255


State 243

   81 ELSEC: ELSE . '{' INNER '}'

    '{'  shift, and go to state 256


State 244

   70 IFN: IF '(' error ')' '{' INNER '}' ELSEC .

    $default  reduce using rule 70 (IFN)


State 245

   69 IFN: IF '(' COND ')' '{' INNER '}' ELSEC .

    $default  reduce using rule 69 (IFN)


State 246

  106 FL3: TYPE VARNAME '=' . RMATH

    '&'              shift, and go to state 17
    '*'              shift, and go to state 18
    '('              shift, and go to state 36
    IDENTIFIER       shift, and go to state 19
    FALSE            shift, and go to state 37
    TRUE             shift, and go to state 38
    INTCONST         shift, and go to state 39
    CHAR_CONSTANT    shift, and go to state 40
    INC_OP           shift, and go to state 41
    DEC_OP           shift, and go to state 42
    DOUBLE_CONSTANT  shift, and go to state 43
    '!'              shift, and go to state 44

    VARNAME    go to state 45
    RMATH      go to state 257
    RADDSUB    go to state 47
    RMULTIDIV  go to state 48
    UNARY_EXP  go to state 49
    FCALL      go to state 50
    CONST      go to state 51


State 247

  105 FL3: VARNAME '=' RMATH .

    $default  reduce using rule 105 (FL3)


State 248

  107 FL3: VARNAME OPERATOR '=' . RMATH

    '&'              shift, and go to state 17
    '*'              shift, and go to state 18
    '('              shift, and go to state 36
    IDENTIFIER       shift, and go to state 19
    FALSE            shift, and go to state 37
    TRUE             shift, and go to state 38
    INTCONST         shift, and go to state 39
    CHAR_CONSTANT    shift, and go to state 40
    INC_OP           shift, and go to state 41
    DEC_OP           shift, and go to state 42
    DOUBLE_CONSTANT  shift, and go to state 43
    '!'              shift, and go to state 44

    VARNAME    go to state 45
    RMATH      go to state 258
    RADDSUB    go to state 47
    RMULTIDIV  go to state 48
    UNARY_EXP  go to state 49
    FCALL      go to state 50
    CONST      go to state 51


State 249

  118 FORN: FOR '(' FL1 FL2 ';' FL3 ')' '{' . INNER '}'

    error            shift, and go to state 98
    '&'              shift, and go to state 17
    '*'              shift, and go to state 18
    IDENTIFIER       shift, and go to state 19
    BOOL             shift, and go to state 2
    INT              shift, and go to state 3
    FLOAT            shift, and go to state 4
    DOUBLE           shift, and go to state 5
    CHAR             shift, and go to state 6
    DO               shift, and go to state 99
    WHILE            shift, and go to state 100
    IF               shift, and go to state 101
    FALSE            shift, and go to state 37
    TRUE             shift, and go to state 38
    IN               shift, and go to state 102
    OUT              shift, and go to state 103
    VOID             shift, and go to state 7
    FOR              shift, and go to state 104
    INTCONST         shift, and go to state 39
    CHAR_CONSTANT    shift, and go to state 40
    RETURN           shift, and go to state 105
    STRUCT           shift, and go to state 57
    SWITCH           shift, and go to state 106
    INC_OP           shift, and go to state 41
    DEC_OP           shift, and go to state 42
    DOUBLE_CONSTANT  shift, and go to state 43
    ';'              shift, and go to state 107

    '}'  reduce using rule 25 (INNER)

    TYPE         go to state 58
    INNER        go to state 259
    VARNAME      go to state 109
    VARDEF       go to state 110
    MATH         go to state 111
    UNARY_EXP    go to state 112
    CONDITIONAL  go to state 113
    IFN          go to state 114
    SWITCHN      go to state 115
    FCALL        go to state 50
    LOOP         go to state 116
    FORN         go to state 117
    WHILEN       go to state 118
    DOWHILEN     go to state 119
    INPUT        go to state 120
    OUTPUT       go to state 121
    CONST        go to state 51


State 250

   87 SWITCHINNER: CASE CONST ':' . '{' INNER '}' SWITCHINNER
   88            | CASE CONST ':' . INNER SWITCHINNER

    error            shift, and go to state 98
    '&'              shift, and go to state 17
    '*'              shift, and go to state 18
    IDENTIFIER       shift, and go to state 19
    BOOL             shift, and go to state 2
    INT              shift, and go to state 3
    FLOAT            shift, and go to state 4
    DOUBLE           shift, and go to state 5
    CHAR             shift, and go to state 6
    DO               shift, and go to state 99
    WHILE            shift, and go to state 100
    IF               shift, and go to state 101
    FALSE            shift, and go to state 37
    TRUE             shift, and go to state 38
    IN               shift, and go to state 102
    OUT              shift, and go to state 103
    VOID             shift, and go to state 7
    FOR              shift, and go to state 104
    INTCONST         shift, and go to state 39
    CHAR_CONSTANT    shift, and go to state 40
    RETURN           shift, and go to state 105
    STRUCT           shift, and go to state 57
    SWITCH           shift, and go to state 106
    INC_OP           shift, and go to state 41
    DEC_OP           shift, and go to state 42
    DOUBLE_CONSTANT  shift, and go to state 43
    '{'              shift, and go to state 260
    ';'              shift, and go to state 107

    CASE     reduce using rule 25 (INNER)
    DEFAULT  reduce using rule 25 (INNER)
    '}'      reduce using rule 25 (INNER)

    TYPE         go to state 58
    INNER        go to state 261
    VARNAME      go to state 109
    VARDEF       go to state 110
    MATH         go to state 111
    UNARY_EXP    go to state 112
    CONDITIONAL  go to state 113
    IFN          go to state 114
    SWITCHN      go to state 115
    FCALL        go to state 50
    LOOP         go to state 116
    FORN         go to state 117
    WHILEN       go to state 118
    DOWHILEN     go to state 119
    INPUT        go to state 120
    OUTPUT       go to state 121
    CONST        go to state 51


State 251

   89 SWITCHINNER: DEFAULT ':' '{' . INNER '}' WODEFAULT

    error            shift, and go to state 98
    '&'              shift, and go to state 17
    '*'              shift, and go to state 18
    IDENTIFIER       shift, and go to state 19
    BOOL             shift, and go to state 2
    INT              shift, and go to state 3
    FLOAT            shift, and go to state 4
    DOUBLE           shift, and go to state 5
    CHAR             shift, and go to state 6
    DO               shift, and go to state 99
    WHILE            shift, and go to state 100
    IF               shift, and go to state 101
    FALSE            shift, and go to state 37
    TRUE             shift, and go to state 38
    IN               shift, and go to state 102
    OUT              shift, and go to state 103
    VOID             shift, and go to state 7
    FOR              shift, and go to state 104
    INTCONST         shift, and go to state 39
    CHAR_CONSTANT    shift, and go to state 40
    RETURN           shift, and go to state 105
    STRUCT           shift, and go to state 57
    SWITCH           shift, and go to state 106
    INC_OP           shift, and go to state 41
    DEC_OP           shift, and go to state 42
    DOUBLE_CONSTANT  shift, and go to state 43
    ';'              shift, and go to state 107

    '}'  reduce using rule 25 (INNER)

    TYPE         go to state 58
    INNER        go to state 262
    VARNAME      go to state 109
    VARDEF       go to state 110
    MATH         go to state 111
    UNARY_EXP    go to state 112
    CONDITIONAL  go to state 113
    IFN          go to state 114
    SWITCHN      go to state 115
    FCALL        go to state 50
    LOOP         go to state 116
    FORN         go to state 117
    WHILEN       go to state 118
    DOWHILEN     go to state 119
    INPUT        go to state 120
    OUTPUT       go to state 121
    CONST        go to state 51


State 252

   90 SWITCHINNER: DEFAULT ':' INNER . WODEFAULT

    CASE  shift, and go to state 263

    $default  reduce using rule 94 (WODEFAULT)

    WODEFAULT  go to state 264


State 253

  123 DOWHILEN: DO '{' INNER '}' WHILE '(' error ')' ';' .

    $default  reduce using rule 123 (DOWHILEN)


State 254

  122 DOWHILEN: DO '{' INNER '}' WHILE '(' COND ')' ';' .

    $default  reduce using rule 122 (DOWHILEN)


State 255

   80 ELSEC: ELIF '(' . COND ')' '{' INNER '}' ELSEC
   82      | ELIF '(' . COND ')' '{' INNER '}'
   83      | ELIF '(' . error ')' '{' INNER '}'
   84      | ELIF '(' . error ')' '{' INNER '}' ELSEC

    error            shift, and go to state 265
    '&'              shift, and go to state 17
    '*'              shift, and go to state 18
    '('              shift, and go to state 36
    IDENTIFIER       shift, and go to state 19
    FALSE            shift, and go to state 37
    TRUE             shift, and go to state 38
    INTCONST         shift, and go to state 39
    CHAR_CONSTANT    shift, and go to state 40
    INC_OP           shift, and go to state 41
    DEC_OP           shift, and go to state 42
    DOUBLE_CONSTANT  shift, and go to state 43
    '!'              shift, and go to state 44

    VARNAME    go to state 45
    RMATH      go to state 153
    RADDSUB    go to state 47
    RMULTIDIV  go to state 48
    UNARY_EXP  go to state 49
    COND       go to state 266
    FCALL      go to state 50
    CONST      go to state 51


State 256

   81 ELSEC: ELSE '{' . INNER '}'

    error            shift, and go to state 98
    '&'              shift, and go to state 17
    '*'              shift, and go to state 18
    IDENTIFIER       shift, and go to state 19
    BOOL             shift, and go to state 2
    INT              shift, and go to state 3
    FLOAT            shift, and go to state 4
    DOUBLE           shift, and go to state 5
    CHAR             shift, and go to state 6
    DO               shift, and go to state 99
    WHILE            shift, and go to state 100
    IF               shift, and go to state 101
    FALSE            shift, and go to state 37
    TRUE             shift, and go to state 38
    IN               shift, and go to state 102
    OUT              shift, and go to state 103
    VOID             shift, and go to state 7
    FOR              shift, and go to state 104
    INTCONST         shift, and go to state 39
    CHAR_CONSTANT    shift, and go to state 40
    RETURN           shift, and go to state 105
    STRUCT           shift, and go to state 57
    SWITCH           shift, and go to state 106
    INC_OP           shift, and go to state 41
    DEC_OP           shift, and go to state 42
    DOUBLE_CONSTANT  shift, and go to state 43
    ';'              shift, and go to state 107

    '}'  reduce using rule 25 (INNER)

    TYPE         go to state 58
    INNER        go to state 267
    VARNAME      go to state 109
    VARDEF       go to state 110
    MATH         go to state 111
    UNARY_EXP    go to state 112
    CONDITIONAL  go to state 113
    IFN          go to state 114
    SWITCHN      go to state 115
    FCALL        go to state 50
    LOOP         go to state 116
    FORN         go to state 117
    WHILEN       go to state 118
    DOWHILEN     go to state 119
    INPUT        go to state 120
    OUTPUT       go to state 121
    CONST        go to state 51


State 257

  106 FL3: TYPE VARNAME '=' RMATH .

    $default  reduce using rule 106 (FL3)


State 258

  107 FL3: VARNAME OPERATOR '=' RMATH .

    $default  reduce using rule 107 (FL3)


State 259

  118 FORN: FOR '(' FL1 FL2 ';' FL3 ')' '{' INNER . '}'

    '}'  shift, and go to state 268


State 260

   87 SWITCHINNER: CASE CONST ':' '{' . INNER '}' SWITCHINNER

    error            shift, and go to state 98
    '&'              shift, and go to state 17
    '*'              shift, and go to state 18
    IDENTIFIER       shift, and go to state 19
    BOOL             shift, and go to state 2
    INT              shift, and go to state 3
    FLOAT            shift, and go to state 4
    DOUBLE           shift, and go to state 5
    CHAR             shift, and go to state 6
    DO               shift, and go to state 99
    WHILE            shift, and go to state 100
    IF               shift, and go to state 101
    FALSE            shift, and go to state 37
    TRUE             shift, and go to state 38
    IN               shift, and go to state 102
    OUT              shift, and go to state 103
    VOID             shift, and go to state 7
    FOR              shift, and go to state 104
    INTCONST         shift, and go to state 39
    CHAR_CONSTANT    shift, and go to state 40
    RETURN           shift, and go to state 105
    STRUCT           shift, and go to state 57
    SWITCH           shift, and go to state 106
    INC_OP           shift, and go to state 41
    DEC_OP           shift, and go to state 42
    DOUBLE_CONSTANT  shift, and go to state 43
    ';'              shift, and go to state 107

    '}'  reduce using rule 25 (INNER)

    TYPE         go to state 58
    INNER        go to state 269
    VARNAME      go to state 109
    VARDEF       go to state 110
    MATH         go to state 111
    UNARY_EXP    go to state 112
    CONDITIONAL  go to state 113
    IFN          go to state 114
    SWITCHN      go to state 115
    FCALL        go to state 50
    LOOP         go to state 116
    FORN         go to state 117
    WHILEN       go to state 118
    DOWHILEN     go to state 119
    INPUT        go to state 120
    OUTPUT       go to state 121
    CONST        go to state 51


State 261

   88 SWITCHINNER: CASE CONST ':' INNER . SWITCHINNER

    CASE     shift, and go to state 221
    DEFAULT  shift, and go to state 222

    $default  reduce using rule 91 (SWITCHINNER)

    SWITCHINNER  go to state 270


State 262

   89 SWITCHINNER: DEFAULT ':' '{' INNER . '}' WODEFAULT

    '}'  shift, and go to state 271


State 263

   92 WODEFAULT: CASE . CONST ':' '{' INNER '}' WODEFAULT
   93          | CASE . CONST ':' INNER WODEFAULT

    FALSE            shift, and go to state 37
    TRUE             shift, and go to state 38
    INTCONST         shift, and go to state 39
    CHAR_CONSTANT    shift, and go to state 40
    DOUBLE_CONSTANT  shift, and go to state 43

    CONST  go to state 272


State 264

   90 SWITCHINNER: DEFAULT ':' INNER WODEFAULT .

    $default  reduce using rule 90 (SWITCHINNER)


State 265

   83 ELSEC: ELIF '(' error . ')' '{' INNER '}'
   84      | ELIF '(' error . ')' '{' INNER '}' ELSEC

    ')'  shift, and go to state 273


State 266

   71 COND: COND . AND_OP COND
   72     | COND . OR_OP COND
   74     | COND . '>' COND
   75     | COND . '<' COND
   76     | COND . DOUBLE_EQ_OP COND
   77     | COND . NOT_EQ_OP COND
   78     | COND . LESS_EQ_OP COND
   79     | COND . GRE_EQ_OP COND
   80 ELSEC: ELIF '(' COND . ')' '{' INNER '}' ELSEC
   82      | ELIF '(' COND . ')' '{' INNER '}'

    OR_OP         shift, and go to state 169
    AND_OP        shift, and go to state 170
    DOUBLE_EQ_OP  shift, and go to state 171
    NOT_EQ_OP     shift, and go to state 172
    '<'           shift, and go to state 173
    '>'           shift, and go to state 174
    LESS_EQ_OP    shift, and go to state 175
    GRE_EQ_OP     shift, and go to state 176
    ')'           shift, and go to state 274


State 267

   81 ELSEC: ELSE '{' INNER . '}'

    '}'  shift, and go to state 275


State 268

  118 FORN: FOR '(' FL1 FL2 ';' FL3 ')' '{' INNER '}' .

    $default  reduce using rule 118 (FORN)


State 269

   87 SWITCHINNER: CASE CONST ':' '{' INNER . '}' SWITCHINNER

    '}'  shift, and go to state 276


State 270

   88 SWITCHINNER: CASE CONST ':' INNER SWITCHINNER .

    $default  reduce using rule 88 (SWITCHINNER)


State 271

   89 SWITCHINNER: DEFAULT ':' '{' INNER '}' . WODEFAULT

    CASE  shift, and go to state 263

    $default  reduce using rule 94 (WODEFAULT)

    WODEFAULT  go to state 277


State 272

   92 WODEFAULT: CASE CONST . ':' '{' INNER '}' WODEFAULT
   93          | CASE CONST . ':' INNER WODEFAULT

    ':'  shift, and go to state 278


State 273

   83 ELSEC: ELIF '(' error ')' . '{' INNER '}'
   84      | ELIF '(' error ')' . '{' INNER '}' ELSEC

    '{'  shift, and go to state 279


State 274

   80 ELSEC: ELIF '(' COND ')' . '{' INNER '}' ELSEC
   82      | ELIF '(' COND ')' . '{' INNER '}'

    '{'  shift, and go to state 280


State 275

   81 ELSEC: ELSE '{' INNER '}' .

    $default  reduce using rule 81 (ELSEC)


State 276

   87 SWITCHINNER: CASE CONST ':' '{' INNER '}' . SWITCHINNER

    CASE     shift, and go to state 221
    DEFAULT  shift, and go to state 222

    $default  reduce using rule 91 (SWITCHINNER)

    SWITCHINNER  go to state 281


State 277

   89 SWITCHINNER: DEFAULT ':' '{' INNER '}' WODEFAULT .

    $default  reduce using rule 89 (SWITCHINNER)


State 278

   92 WODEFAULT: CASE CONST ':' . '{' INNER '}' WODEFAULT
   93          | CASE CONST ':' . INNER WODEFAULT

    error            shift, and go to state 98
    '&'              shift, and go to state 17
    '*'              shift, and go to state 18
    IDENTIFIER       shift, and go to state 19
    BOOL             shift, and go to state 2
    INT              shift, and go to state 3
    FLOAT            shift, and go to state 4
    DOUBLE           shift, and go to state 5
    CHAR             shift, and go to state 6
    DO               shift, and go to state 99
    WHILE            shift, and go to state 100
    IF               shift, and go to state 101
    FALSE            shift, and go to state 37
    TRUE             shift, and go to state 38
    IN               shift, and go to state 102
    OUT              shift, and go to state 103
    VOID             shift, and go to state 7
    FOR              shift, and go to state 104
    INTCONST         shift, and go to state 39
    CHAR_CONSTANT    shift, and go to state 40
    RETURN           shift, and go to state 105
    STRUCT           shift, and go to state 57
    SWITCH           shift, and go to state 106
    INC_OP           shift, and go to state 41
    DEC_OP           shift, and go to state 42
    DOUBLE_CONSTANT  shift, and go to state 43
    '{'              shift, and go to state 282
    ';'              shift, and go to state 107

    CASE  reduce using rule 25 (INNER)
    '}'   reduce using rule 25 (INNER)

    TYPE         go to state 58
    INNER        go to state 283
    VARNAME      go to state 109
    VARDEF       go to state 110
    MATH         go to state 111
    UNARY_EXP    go to state 112
    CONDITIONAL  go to state 113
    IFN          go to state 114
    SWITCHN      go to state 115
    FCALL        go to state 50
    LOOP         go to state 116
    FORN         go to state 117
    WHILEN       go to state 118
    DOWHILEN     go to state 119
    INPUT        go to state 120
    OUTPUT       go to state 121
    CONST        go to state 51


State 279

   83 ELSEC: ELIF '(' error ')' '{' . INNER '}'
   84      | ELIF '(' error ')' '{' . INNER '}' ELSEC

    error            shift, and go to state 98
    '&'              shift, and go to state 17
    '*'              shift, and go to state 18
    IDENTIFIER       shift, and go to state 19
    BOOL             shift, and go to state 2
    INT              shift, and go to state 3
    FLOAT            shift, and go to state 4
    DOUBLE           shift, and go to state 5
    CHAR             shift, and go to state 6
    DO               shift, and go to state 99
    WHILE            shift, and go to state 100
    IF               shift, and go to state 101
    FALSE            shift, and go to state 37
    TRUE             shift, and go to state 38
    IN               shift, and go to state 102
    OUT              shift, and go to state 103
    VOID             shift, and go to state 7
    FOR              shift, and go to state 104
    INTCONST         shift, and go to state 39
    CHAR_CONSTANT    shift, and go to state 40
    RETURN           shift, and go to state 105
    STRUCT           shift, and go to state 57
    SWITCH           shift, and go to state 106
    INC_OP           shift, and go to state 41
    DEC_OP           shift, and go to state 42
    DOUBLE_CONSTANT  shift, and go to state 43
    ';'              shift, and go to state 107

    '}'  reduce using rule 25 (INNER)

    TYPE         go to state 58
    INNER        go to state 284
    VARNAME      go to state 109
    VARDEF       go to state 110
    MATH         go to state 111
    UNARY_EXP    go to state 112
    CONDITIONAL  go to state 113
    IFN          go to state 114
    SWITCHN      go to state 115
    FCALL        go to state 50
    LOOP         go to state 116
    FORN         go to state 117
    WHILEN       go to state 118
    DOWHILEN     go to state 119
    INPUT        go to state 120
    OUTPUT       go to state 121
    CONST        go to state 51


State 280

   80 ELSEC: ELIF '(' COND ')' '{' . INNER '}' ELSEC
   82      | ELIF '(' COND ')' '{' . INNER '}'

    error            shift, and go to state 98
    '&'              shift, and go to state 17
    '*'              shift, and go to state 18
    IDENTIFIER       shift, and go to state 19
    BOOL             shift, and go to state 2
    INT              shift, and go to state 3
    FLOAT            shift, and go to state 4
    DOUBLE           shift, and go to state 5
    CHAR             shift, and go to state 6
    DO               shift, and go to state 99
    WHILE            shift, and go to state 100
    IF               shift, and go to state 101
    FALSE            shift, and go to state 37
    TRUE             shift, and go to state 38
    IN               shift, and go to state 102
    OUT              shift, and go to state 103
    VOID             shift, and go to state 7
    FOR              shift, and go to state 104
    INTCONST         shift, and go to state 39
    CHAR_CONSTANT    shift, and go to state 40
    RETURN           shift, and go to state 105
    STRUCT           shift, and go to state 57
    SWITCH           shift, and go to state 106
    INC_OP           shift, and go to state 41
    DEC_OP           shift, and go to state 42
    DOUBLE_CONSTANT  shift, and go to state 43
    ';'              shift, and go to state 107

    '}'  reduce using rule 25 (INNER)

    TYPE         go to state 58
    INNER        go to state 285
    VARNAME      go to state 109
    VARDEF       go to state 110
    MATH         go to state 111
    UNARY_EXP    go to state 112
    CONDITIONAL  go to state 113
    IFN          go to state 114
    SWITCHN      go to state 115
    FCALL        go to state 50
    LOOP         go to state 116
    FORN         go to state 117
    WHILEN       go to state 118
    DOWHILEN     go to state 119
    INPUT        go to state 120
    OUTPUT       go to state 121
    CONST        go to state 51


State 281

   87 SWITCHINNER: CASE CONST ':' '{' INNER '}' SWITCHINNER .

    $default  reduce using rule 87 (SWITCHINNER)


State 282

   92 WODEFAULT: CASE CONST ':' '{' . INNER '}' WODEFAULT

    error            shift, and go to state 98
    '&'              shift, and go to state 17
    '*'              shift, and go to state 18
    IDENTIFIER       shift, and go to state 19
    BOOL             shift, and go to state 2
    INT              shift, and go to state 3
    FLOAT            shift, and go to state 4
    DOUBLE           shift, and go to state 5
    CHAR             shift, and go to state 6
    DO               shift, and go to state 99
    WHILE            shift, and go to state 100
    IF               shift, and go to state 101
    FALSE            shift, and go to state 37
    TRUE             shift, and go to state 38
    IN               shift, and go to state 102
    OUT              shift, and go to state 103
    VOID             shift, and go to state 7
    FOR              shift, and go to state 104
    INTCONST         shift, and go to state 39
    CHAR_CONSTANT    shift, and go to state 40
    RETURN           shift, and go to state 105
    STRUCT           shift, and go to state 57
    SWITCH           shift, and go to state 106
    INC_OP           shift, and go to state 41
    DEC_OP           shift, and go to state 42
    DOUBLE_CONSTANT  shift, and go to state 43
    ';'              shift, and go to state 107

    '}'  reduce using rule 25 (INNER)

    TYPE         go to state 58
    INNER        go to state 286
    VARNAME      go to state 109
    VARDEF       go to state 110
    MATH         go to state 111
    UNARY_EXP    go to state 112
    CONDITIONAL  go to state 113
    IFN          go to state 114
    SWITCHN      go to state 115
    FCALL        go to state 50
    LOOP         go to state 116
    FORN         go to state 117
    WHILEN       go to state 118
    DOWHILEN     go to state 119
    INPUT        go to state 120
    OUTPUT       go to state 121
    CONST        go to state 51


State 283

   93 WODEFAULT: CASE CONST ':' INNER . WODEFAULT

    CASE  shift, and go to state 263

    $default  reduce using rule 94 (WODEFAULT)

    WODEFAULT  go to state 287


State 284

   83 ELSEC: ELIF '(' error ')' '{' INNER . '}'
   84      | ELIF '(' error ')' '{' INNER . '}' ELSEC

    '}'  shift, and go to state 288


State 285

   80 ELSEC: ELIF '(' COND ')' '{' INNER . '}' ELSEC
   82      | ELIF '(' COND ')' '{' INNER . '}'

    '}'  shift, and go to state 289


State 286

   92 WODEFAULT: CASE CONST ':' '{' INNER . '}' WODEFAULT

    '}'  shift, and go to state 290


State 287

   93 WODEFAULT: CASE CONST ':' INNER WODEFAULT .

    $default  reduce using rule 93 (WODEFAULT)


State 288

   83 ELSEC: ELIF '(' error ')' '{' INNER '}' .
   84      | ELIF '(' error ')' '{' INNER '}' . ELSEC

    ELIF  shift, and go to state 242
    ELSE  shift, and go to state 243

    $default  reduce using rule 83 (ELSEC)

    ELSEC  go to state 291


State 289

   80 ELSEC: ELIF '(' COND ')' '{' INNER '}' . ELSEC
   82      | ELIF '(' COND ')' '{' INNER '}' .

    ELIF  shift, and go to state 242
    ELSE  shift, and go to state 243

    $default  reduce using rule 82 (ELSEC)

    ELSEC  go to state 292


State 290

   92 WODEFAULT: CASE CONST ':' '{' INNER '}' . WODEFAULT

    CASE  shift, and go to state 263

    $default  reduce using rule 94 (WODEFAULT)

    WODEFAULT  go to state 293


State 291

   84 ELSEC: ELIF '(' error ')' '{' INNER '}' ELSEC .

    $default  reduce using rule 84 (ELSEC)


State 292

   80 ELSEC: ELIF '(' COND ')' '{' INNER '}' ELSEC .

    $default  reduce using rule 80 (ELSEC)


State 293

   92 WODEFAULT: CASE CONST ':' '{' INNER '}' WODEFAULT .

    $default  reduce using rule 92 (WODEFAULT)
